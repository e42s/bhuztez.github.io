<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>C-c C-k</title><link>https://bhuztez.github.io/</link><description></description><atom:link href="https://bhuztez.github.io/feeds.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 30 Jun 2016 00:00:00 +0800</lastBuildDate><item><title>Python模拟HTML表单提交</title><link>https://bhuztez.github.io/2016/multipart-form-data-in-python.html</link><description>&lt;p&gt;HTML表单里有一种类型是 &lt;code&gt;multipart/form-data&lt;/code&gt; ，&lt;/p&gt;
&lt;p&gt;搜了一下结果发现要么是远古时期的，要么推荐用requests，就是没有人推荐用标准库的方法。Python明明自带MIME库了，用标准库就足够了嘛。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.message&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'multipart/form-data'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_write_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_generator&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# DARK MAGIC followed&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Disposition'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'form-data'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_payload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;form_data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;form_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iteritems&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# THIS IS A SEPARATION BARRIER&lt;/span&gt;
    &lt;span class="c1"&gt;# NEVER LET CODE MOVE ACROSS THIS&lt;/span&gt;
    &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Thu, 30 Jun 2016 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2016-06-30:2016/multipart-form-data-in-python.html</guid><category>Python</category><category>HTTP</category></item><item><title>创建Fedora chroot</title><link>https://bhuztez.github.io/2016/chroot.html</link><description>&lt;p&gt;在Fedora 21之前，要创建chroot都比较容易，可以参考 &lt;a class="reference external" href="http://blog.parahard.com/2011/06/five-steps-to-create-fedora-chroot-jail.html"&gt;Five steps to create Fedora chroot jail using yum&lt;/a&gt; 。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;自从Fedora 21开始，fedora-release不再像以前那样了。fedora-release会依赖bash，bash又会依赖更多包，一个个去找过来是不现实的。所以只能强制安装了。&lt;/p&gt;
&lt;p&gt;先建好目录，初始化RPM的db&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
mkdir -p /path/to/chroot/root
rpm --root &amp;quot;/path/to/chroot/root&amp;quot; --initdb
&lt;/pre&gt;
&lt;p&gt;装包时，需要让rpm相信自己是root。比如可以用 &lt;code&gt;userns spawn -n chroot --user -- /bin/bash&lt;/code&gt; 来建一个user namespace，因为安装需要联网，所以不建新的network namespace。更新的Fedora已经用dnf替换yum了，所以更推荐使用dnf来安装。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
rpm -ivh --nodeps --root &amp;quot;/path/to/chroot/root&amp;quot; fedora-repos-23-1.noarch.rpm fedora-release-23-1.noarch.rpm
dnf --installroot=&amp;quot;/path/to/chroot/root&amp;quot; install coreutils bash
&lt;/pre&gt;
&lt;p&gt;安装完成后，就可以进入chroot了&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
chroot &amp;quot;/path/to/chroot/root&amp;quot; /bin/bash
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Fri, 08 Apr 2016 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2016-04-08:2016/chroot.html</guid></item><item><title>把Android设备变成USB摄像头</title><link>https://bhuztez.github.io/2015/turn-android-into-usb-webcam.html</link><description>&lt;p&gt;闲置的山寨Android设备也不能浪费啊。看上去只要装个&lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.pas.webcam&amp;amp;hl=en"&gt;IP WebCam&lt;/a&gt;就好了。实际上却比这折腾的多了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;首先，有些奇怪的设备在刚插入时，没法直接使用设备，会先进入给你的机器装驱动的模式，这样就没法用ADB了。需要用 usb_modeswitch 才行。&lt;/p&gt;
&lt;p&gt;先用lsusb找到新插入USB设备的ID。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
Bus 001 Device 001: ID 0001:0002 Vender Info
&lt;/pre&gt;
&lt;p&gt;假如是像上面这样的，可以用以下命令。可能还需要 &lt;code&gt;--huawei-mode&lt;/code&gt; 之类的参数&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
usb_modeswitch -v 0001 -p 0002
&lt;/pre&gt;
&lt;p&gt;ADB能连上之后，装上IP WebCam，设置好端口转发，就能用比如vlc，看摄像头的视频了。&lt;/p&gt;
&lt;p&gt;参考&lt;a class="reference external" href="https://github.com/bluezio/ipwebcam-gst/blob/master/prepare-videochat.sh"&gt;ipwebcam-gst&lt;/a&gt;里的说明，检查是不是能用GStreamer播放。&lt;/p&gt;
&lt;p&gt;安装&lt;a class="reference external" href="https://github.com/umlaeute/v4l2loopback"&gt;v4l2loopback&lt;/a&gt;内核模块。这样就能有 /dev/video0 了。可是有点小问题，在Fedora上并不能用GStreamer的v4l2sink把视频传进去，需要修改一下代码。&lt;/p&gt;
&lt;p&gt;注意，Skype需要一些特别的参数，参考v4l2loopback &lt;a class="reference external" href="https://github.com/umlaeute/v4l2loopback/wiki/Skype"&gt;Wiki&lt;/a&gt;里的说明&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Wed, 07 Oct 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-10-07:2015/turn-android-into-usb-webcam.html</guid></item><item><title>概率论基础</title><link>https://bhuztez.github.io/2015/probability-theory.html</link><description>&lt;p&gt;在大数据，机器学习大行其道的今天，很多人却避而不谈概率，甚至会有人认为概率不重要。即便是很多提到概率的，也不能把概率讲清楚。要理解概率还是得看E.T. Jaynes的 &lt;a class="reference external" href="http://omega.albany.edu:8008/JaynesBook.html"&gt;Probability Theory: the Logic of Science&lt;/a&gt; 和 A.N. Kolmogorov 的 &lt;a class="reference external" href="http://www.kolmogorov.com/Foundations.html"&gt;Foundations of the Theory of Probability&lt;/a&gt; 。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;概率论的形式化早已经完成。到现在还讲不清楚，真的很奇怪了。可现实偏偏是这样的。概率论不见的有多难啊，怎么也比SVM那些fancy的技巧容易多了。先列出符合直觉的事件运算必须满足的性质，给每个事件指定个概率，找到能同时满足这些条件的理论，就是概率公理了。有了概率公理，就可以根据定义得出条件概率的计算公式，进而可以得到Bayes公式。而根据Wallis Derivation可以得到最大熵原理，加上各种约束条件就能解出各种不同的分布了。还有Hammersley-Clifford定理告诉我们，Markov性质和Gibbs Measure的意义是一样的。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Tue, 09 Jun 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-06-09:2015/probability-theory.html</guid></item><item><title>Erlang代码热更新</title><link>https://bhuztez.github.io/2015/how-erlang-change-code.html</link><description>&lt;p&gt;Erlang代码热更新是一件很简单的事。很多教程都偏重于介绍工具的使用，而忽略了热更新过程本身。Erlang官方文档里面倒是都有，只是内容分的比较散，更适合熟悉Erlang的人查阅。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Erlang代码热更新的核心就是 &lt;code&gt;M:F(A)&lt;/code&gt; 。以这种形式调用函数，Erlang会自动使用模块M的最新版本。这样你在Emacs里 &lt;code&gt;C-c C-k&lt;/code&gt; 之后，不仅新启动的进程会用新版本的代码，已经启动的进程也一样会用新版本的代码，比如gen_server，就是始终以这种形式调用callback的。不过这样就假设了状态的数据格式是不变的，只适合在开发时使用，真正部署时不能就这么直接更新上去。&lt;/p&gt;
&lt;p&gt;release_handler首先会沿着supervisor tree找出所有受影响的子进程。子进程依赖的模块，要么已经在Child Specification里有了，要么Child Specification里写的是dynamic，可以通过发get_modules消息获得。接着在载入新版本模块之前，必须暂停这些子进程，不然只要一运行 &lt;code&gt;M:F(A)&lt;/code&gt; 就立即跳到新版本模块了。等新版本模块载入之后，再发送消息告诉这些子进程代码变了，需要执行 &lt;code&gt;code_change&lt;/code&gt; 了。另外，release_handler还会把引用了旧版本代码的进程都杀掉，因为同一个模块在Erlang里只能有两个版本，那些进程不退出，就再也更新不了了。引用旧版本代码指的是，比如在状态中有调用下面这样的函数返回的函数。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
f(X) -&amp;gt;
    fun () -&amp;gt;
        g(X)
    end.
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Thu, 04 Jun 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-06-04:2015/how-erlang-change-code.html</guid></item><item><title>Erlang字符串输出</title><link>https://bhuztez.github.io/2015/erlang-binary.html</link><description>&lt;p&gt;经常有人莫名其妙的抱怨Erlang字符串处理效率低下。在过去，Erlang确实是用简单的list来表示字符串的，不停拼接list效率确实不行。可现在这已经是老黄历了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Erlang里引入了binary。在拼接字符串的时候没必要复制，直接构造一个新的list就完事了。反正标准库函数一般都能接受这种用法，最后就直接就当 iovec 发出去了。&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;IOList3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;IOList1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;IOList2&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这里先无视各种不常用的情况，iolist的类型定义可以写成&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="ni"&gt;type&lt;/span&gt; &lt;span class="n"&gt;iolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;iolist&lt;/span&gt;&lt;span class="p"&gt;()].&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;我就是要把两个binary拼起来怎么办？比如&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;Bin3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;Bin1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Bin2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;binary&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Erlang会机智的计算出Bin1, Bin2 长度之和，先占好空间，再把字符串都复制进去。和你在别的语言里手动复制字符串并没有什么区别。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Fri, 08 May 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-05-08:2015/erlang-binary.html</guid></item><item><title>八皇后问题</title><link>https://bhuztez.github.io/2015/eight-queens-problem.html</link><description>&lt;p&gt;八皇后问题不算太难，可写起来也是挺麻烦的。有家奇怪的公司为了炒作，提出了C++在十行之内解八皇后的挑战，尽管他们自己办不到。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;这当然也是可以做到啦，查查标准库文档一会儿就写出来了。&lt;/p&gt;
&lt;pre class="code c++ literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;bitset&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;numeric&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;utility&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;next_permutation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;bitset&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;accumulate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_pair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_pair&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);}).&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;bitset&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;accumulate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_pair&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_pair&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);}).&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;queens&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;可是要代码短，还是得用J语言啊。下面的解法很直观，很占内存，可也是很短的。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
   NB. 分解成两个问题
   NB. 1) 生成全排列，这样每条横线，每条竖线上都只有一个皇后
   NB. 2) 检查每条斜线上是否最多只有一个皇后

   NB. 生成全排列很简单
   (i.!3)A.i.3
0 1 2
0 2 1
1 0 2
1 2 0
2 0 1
2 1 0
   NB. 0表示空，1表示皇后
   #:2^(i.!3)A.i.3
0 0 1
0 1 0
1 0 0

0 0 1
1 0 0
0 1 0

0 1 0
0 0 1
1 0 0

0 1 0
1 0 0
0 0 1

1 0 0
0 0 1
0 1 0

1 0 0
0 1 0
0 0 1

   NB. 沿从右上往左下的斜线相加
   +//.&amp;quot;2 #:2^(i.!3)A.i.3
0 0 3 0 0
0 1 1 1 0
0 1 1 1 0
0 2 0 0 1
1 0 0 2 0
1 0 1 0 1

   NB. 判断是否大于1
   1 &amp;lt; +//.&amp;quot;2 #:2^(i.!3)A.i.3
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 1 0
0 0 0 0 0

   NB. 因为是从上到下算下去的，得转一下
   |: 1 &amp;lt; +//.&amp;quot;2 #:2^(i.!3)A.i.3
0 0 0 0 0 0
0 0 0 1 0 0
1 0 0 0 0 0
0 0 0 0 1 0
0 0 0 0 0 0

   NB. 按竖行分别取或
   +./ |: 1 &amp;lt; +//.&amp;quot;2 #:2^(i.!3)A.i.3
1 0 0 1 1 0

   NB. 取反
   -. +./ |: 1 &amp;lt; +//.&amp;quot;2 #:2^(i.!3)A.i.3
0 1 1 0 0 1

   NB. 定义d，是否在从右上往左下的斜线上皇后数小于等于1
   d=:3 :'-.+./|:1&amp;lt;+//.&amp;quot;2 y'
   d #:2^(i.!3)A.i.3
0 1 1 0 0 1

   NB. 取出对应的矩阵
   (d#]) #:2^(i.!3)A.i.3
0 0 1
1 0 0
0 1 0

0 1 0
0 0 1
1 0 0

1 0 0
0 1 0
0 0 1

   NB. 把矩阵沿竖直方向翻转，这样找出左上往右下的斜线上皇后数小于等于1的
   (|.&amp;#64;d#]) #:2^(i.!3)A.i.3
0 0 1
0 1 0
1 0 0

0 1 0
1 0 0
0 0 1

1 0 0
0 0 1
0 1 0

   NB. 定义q，用来找出所有N皇后矩阵
   q=:3 :'((d*.|.&amp;#64;d)#])#:2^(i.!y)A.i.y'
   # q 8
92
   q 4
0 0 1 0
1 0 0 0
0 0 0 1
0 1 0 0

0 1 0 0
0 0 0 1
1 0 0 0
0 0 1 0
   q 6
0 0 0 0 1 0
0 0 1 0 0 0
1 0 0 0 0 0
0 0 0 0 0 1
0 0 0 1 0 0
0 1 0 0 0 0

0 0 0 1 0 0
1 0 0 0 0 0
0 0 0 0 1 0
0 1 0 0 0 0
0 0 0 0 0 1
0 0 1 0 0 0

0 0 1 0 0 0
0 0 0 0 0 1
0 1 0 0 0 0
0 0 0 0 1 0
1 0 0 0 0 0
0 0 0 1 0 0

0 1 0 0 0 0
0 0 0 1 0 0
0 0 0 0 0 1
1 0 0 0 0 0
0 0 1 0 0 0
0 0 0 0 1 0

   NB. 太棒了，不到80个字符就已经能解出八皇后问题了
   d=:3 :'-.+./|:1&amp;lt;+//.&amp;quot;2 y'
   q=:3 :'((d*.|.&amp;#64;d)#])#:2^(i.!y)A.i.y'
&lt;/pre&gt;
&lt;p&gt;用和上面C++相同的算法，在J语言里可以这么写&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
(i.(([:*./&amp;quot;1[:(#=+/&amp;#64;:~:)&amp;quot;1(+,:-)&amp;quot;1)#])i.&amp;#64;:!A.i.)8
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Fri, 06 Mar 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-03-06:2015/eight-queens-problem.html</guid></item><item><title>Penney's game</title><link>https://bhuztez.github.io/2015/penney-game.html</link><description>&lt;p&gt;Penney's game 是个很简单的问题。可是网络上能找到的答案，要么到状态转移图就完了，要么就跳过中间步骤直接出答案了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;解这个问题，分析一下状态转移的情况，接着直接计算 &lt;span alt="P \cdot \lim_{n \to \infty}{M^n}" class="formula"&gt;
&lt;i&gt;P&lt;/i&gt;⋅&lt;span class="limits"&gt;&lt;span class="limit"&gt;lim&lt;/span&gt;&lt;/span&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; → ∞&lt;/sub&gt;&lt;i&gt;M&lt;/i&gt;&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;&lt;/span&gt;
 就可以了。其中，P是初始概率 &lt;span alt="[1, 0, 0, ..., 0]" class="formula"&gt;
[1, 0, 0, ..., 0]&lt;/span&gt;
 。M 是状态转移矩阵。把终止状态排在最后，可以观察到，终止状态对应的几个横行，左边都是零，最右边是个单位矩阵 &lt;span alt="\left[\begin{matrix} A &amp;amp; B \\ O &amp;amp; I \end{matrix}\right]" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;B&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;O&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;I&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
 。不妨令 &lt;span alt="M^n = \left[\begin{matrix} A_n &amp;amp; B_n \\ O &amp;amp; I \end{matrix}\right]" class="formula"&gt;
&lt;i&gt;M&lt;/i&gt;&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; = &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;B&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;O&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;I&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
 有&lt;/p&gt;
&lt;div alt="\begin{array}{lcl} M^n &amp;amp;=&amp;amp; \left[\begin{matrix} A_n &amp;amp; B_n \\ O &amp;amp; I \end{matrix}\right] \\     &amp;amp;=&amp;amp; \left[\begin{matrix} A_{n-1} &amp;amp; B_{n-1} \\ O &amp;amp; I \end{matrix}\right] \cdot \left[\begin{matrix} A &amp;amp; B \\ O &amp;amp; I \end{matrix}\right] \\     &amp;amp;=&amp;amp; \left[\begin{matrix} A_{n-1} \cdot A &amp;amp; A_{n-1} \cdot B + B_{n-1} \\ O &amp;amp; I \end{matrix}\right] \\     &amp;amp;=&amp;amp; \left[\begin{matrix} A^n &amp;amp; (\sum_{i=0}^{n-1} A^i) \cdot B \\ O &amp;amp; I \end{matrix}\right] \end{array}" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;M&lt;/i&gt;&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 = 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;B&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;O&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;I&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 = 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;B&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;O&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;I&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;B&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;O&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;I&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 = 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sub&gt;⋅&lt;i&gt;A&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sub&gt;⋅&lt;i&gt;B&lt;/i&gt; + &lt;i&gt;B&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;O&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;I&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 = 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;A&lt;/i&gt;&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
(&lt;span class="limits"&gt;&lt;sup class="limit"&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sup&gt;&lt;span class="limit"&gt;&lt;span class="symbol"&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;sub class="limit"&gt;&lt;i&gt;i&lt;/i&gt; = 0&lt;/sub&gt;&lt;/span&gt;&lt;i&gt;A&lt;/i&gt;&lt;sup&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sup&gt;)⋅&lt;i&gt;B&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;O&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;I&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;因为最终都是会进入终止状态的，所以 &lt;span alt="\lim_{n \to \infty} A^n = O" class="formula"&gt;
&lt;span class="limits"&gt;&lt;span class="limit"&gt;lim&lt;/span&gt;&lt;/span&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; → ∞&lt;/sub&gt;&lt;i&gt;A&lt;/i&gt;&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; = &lt;i&gt;O&lt;/i&gt;&lt;/span&gt;
 ，而 &lt;span alt="(I-A) \cdot (\sum_{i=0}^{n-1} A^i) = I - A^n" class="formula"&gt;
(&lt;i&gt;I&lt;/i&gt; − &lt;i&gt;A&lt;/i&gt;)⋅(&lt;span class="limits"&gt;&lt;span class="limit"&gt;&lt;span class="symbol"&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="scripts"&gt;&lt;sup class="script"&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sup&gt;&lt;sub class="script"&gt;&lt;i&gt;i&lt;/i&gt; = 0&lt;/sub&gt;&lt;/span&gt;&lt;i&gt;A&lt;/i&gt;&lt;sup&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sup&gt;) = &lt;i&gt;I&lt;/i&gt; − &lt;i&gt;A&lt;/i&gt;&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;&lt;/span&gt;
 。于是， &lt;span alt="\lim_{n \to \infty} (I-A) \cdot (\sum_{i=0}^{n-1} A^i) = I" class="formula"&gt;
&lt;span class="limits"&gt;&lt;span class="limit"&gt;lim&lt;/span&gt;&lt;/span&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; → ∞&lt;/sub&gt;(&lt;i&gt;I&lt;/i&gt; − &lt;i&gt;A&lt;/i&gt;)⋅(&lt;span class="limits"&gt;&lt;span class="limit"&gt;&lt;span class="symbol"&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="scripts"&gt;&lt;sup class="script"&gt;&lt;i&gt;n&lt;/i&gt; − 1&lt;/sup&gt;&lt;sub class="script"&gt;&lt;i&gt;i&lt;/i&gt; = 0&lt;/sub&gt;&lt;/span&gt;&lt;i&gt;A&lt;/i&gt;&lt;sup&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sup&gt;) = &lt;i&gt;I&lt;/i&gt;&lt;/span&gt;
 。因此这就相当于要求出 &lt;span alt="(I-A)^{-1}\cdot B" class="formula"&gt;
(&lt;i&gt;I&lt;/i&gt; − &lt;i&gt;A&lt;/i&gt;)&lt;sup&gt; − 1&lt;/sup&gt;⋅&lt;i&gt;B&lt;/i&gt;&lt;/span&gt;
 。&lt;/p&gt;
&lt;p&gt;用J语言一行代码就可以了&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
   solve=:];&amp;amp;&amp;gt;{.&amp;#64;:(-&amp;#64;:#&amp;#64;:]([({.&amp;quot;0 1%.(=&amp;#64;i.&amp;#64;:#-])&amp;#64;:(}.&amp;quot;0 1))}.)+/&amp;#64;:(3 :'({.&amp;quot;1 y)(;/}.&amp;quot;1 y)}0$~(,])#y'&amp;amp;]&amp;quot;2)&amp;#64;:(2 0 1|:(((,1&amp;amp;-)&amp;#64;:[,&amp;quot;1 2])(i.&amp;#64;:#,:&amp;quot;0 1])&amp;#64;:(((('HT',~&amp;amp;.&amp;gt;&amp;quot;1 0]),[,.[)(1 i:~(]-:({.~-&amp;#64;:#))&amp;amp;&amp;gt;)&amp;quot;0 1,~)([:(([:/:#&amp;amp;&amp;gt;){])'';#}.~.&amp;#64;:(,;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;)))))))
   1r2 solve 'HHT';'HTT'
┌───┬───┐
│HHT│2r3│
├───┼───┤
│HTT│1r3│
└───┴───┘
&lt;/pre&gt;
&lt;p&gt;假如你阅读上面这行代码有困难，可以看下面的解释&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
   NB. 求一个序列的中间状态
   &amp;lt;\ 'HHT'
┌─┬──┬───┐
│H│HH│HHT│
└─┴──┴───┘
   NB. 对每个序列分别求中间状态
   &amp;lt;\&amp;amp;.&amp;gt; 'HHT';'HTT'
┌──────────┬──────────┐
│┌─┬──┬───┐│┌─┬──┬───┐│
││H│HH│HHT│││H│HT│HTT││
│└─┴──┴───┘│└─┴──┴───┘│
└──────────┴──────────┘
   NB. 把结果拼到一起
   ; &amp;lt;\&amp;amp;.&amp;gt; 'HHT';'HTT'
┌─┬──┬───┬─┬──┬───┐
│H│HH│HHT│H│HT│HTT│
└─┴──┴───┴─┴──┴───┘
   NB. 把终止状态放最前面
   (, ;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;)) 'HHT';'HTT'
┌───┬───┬─┬──┬───┬─┬──┬───┐
│HHT│HTT│H│HH│HHT│H│HT│HTT│
└───┴───┴─┴──┴───┴─┴──┴───┘
   NB. 去重
   ~. (, ;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;)) 'HHT';'HTT'
┌───┬───┬─┬──┬──┐
│HHT│HTT│H│HH│HT│
└───┴───┴─┴──┴──┘
   NB. 把最前面的终止状态去掉
   (# }. ~.&amp;#64;:(, ;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;))) 'HHT';'HTT'
┌─┬──┬──┐
│H│HH│HT│
└─┴──┴──┘
   NB. 再把起始状态补上
   ('' ; # }. ~.&amp;#64;:(, ;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;))) 'HHT';'HTT'
┌┬─┬──┬──┐
││H│HH│HT│
└┴─┴──┴──┘
   NB. 按长度排序
   (([:/:#&amp;amp;&amp;gt;){])('' ; # }. ~.&amp;#64;:(, ;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;))) 'HHT';'HTT'
┌─┬──┬──┐
│H│HH│HT│
└─┴──┴──┘
   NB. 这样就得到了所有非终止状态
   non_terminal =: [: (([:/:#&amp;amp;&amp;gt;){]) ('' ; # }. ~.&amp;#64;:(, ;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;)))
   non_terminal 'HHT';'HTT'
┌┬─┬──┬──┐
││H│HH│HT│
└┴─┴──┴──┘
   NB. 在最后加上终止状态就得到了所有状态
   (,~ non_terminal) 'HHT';'HTT'
┌┬─┬──┬──┬───┬───┐
││H│HH│HT│HHT│HTT│
└┴─┴──┴──┴───┴───┘
   NB. 抛一次硬币，在中间状态的序列后面加上H和T
   (('HT' ,~&amp;amp;.&amp;gt;&amp;quot;1 0 ]) non_terminal) 'HHT';'HTT'
┌───┬───┐
│H  │T  │
├───┼───┤
│HH │HT │
├───┼───┤
│HHH│HHT│
├───┼───┤
│HTH│HTT│
└───┴───┘
   NB. 不妨认为终止状态的下一个状态是他本身
   ((('HT' ,~&amp;amp;.&amp;gt;&amp;quot;1 0 ]) , [ ,. [) non_terminal) 'HHT';'HTT'
┌───┬───┐
│H  │T  │
├───┼───┤
│HH │HT │
├───┼───┤
│HHH│HHT│
├───┼───┤
│HTH│HTT│
├───┼───┤
│HHT│HHT│
├───┼───┤
│HTT│HTT│
└───┴───┘
   NB. 这样就得到了，所有抛一次硬币后的可能序列
   next =: ('HT' ,~&amp;amp;.&amp;gt;&amp;quot;1 0 ]) , [ ,. [
   NB. 排成表格
   ((,~ ,. next) non_terminal) 'HHT';'HTT'
┌───┬───┬───┐
│   │H  │T  │
├───┼───┼───┤
│H  │HH │HT │
├───┼───┼───┤
│HH │HHH│HHT│
├───┼───┼───┤
│HT │HTH│HTT│
├───┼───┼───┤
│HHT│HHT│HHT│
├───┼───┼───┤
│HTT│HTT│HTT│
└───┴───┴───┘
   NB. 接下来要判断序列是否以某个状态结尾
   'H' -: 'H'
1
   'H' -: 'HH'
0
   'HT' -: 'HT'
1
   _1 {. 'HHHT'
T
   _2 {. 'HHHT'
HT
   _3 {. 'HHHT'
HHT
   -&amp;#64;:# 'HT'
_2
   'HHHT' ({.~ -&amp;#64;:#) 'HT'
HT
   'HHHT' (] -: ({.~ -&amp;#64;:#)) 'HT'
1
   endswith =: ] -: ({.~ -&amp;#64;:#)
   'HHHT' endswith 'HHT'
1
   'HHHT' endswith 'HHH'
0
   ((next (endswith &amp;amp; &amp;gt;)&amp;quot;0 1 ,~) non_terminal) 'HHT';'HTT'
1 1 0 0 0 0
1 0 0 0 0 0

1 1 1 0 0 0
1 0 0 1 0 0

1 1 1 0 0 0
1 0 0 1 1 0

1 1 0 0 0 0
1 0 0 0 0 1

1 0 0 1 1 0
1 0 0 1 1 0

1 0 0 0 0 1
1 0 0 0 0 1
   NB. 找出最长的那个状态
   1 i:~&amp;quot;0 1 ((next (endswith &amp;amp; &amp;gt;)&amp;quot;0 1 ,~) non_terminal) 'HHT';'HTT'
1 0
2 3
2 4
1 5
4 4
5 5
   transition =: (1 i:~ endswith&amp;amp;&amp;gt;)&amp;quot;0 1
   ((next (transition { ]) ,~) non_terminal) 'HHT';'HTT'
┌───┬───┐
│H  │   │
├───┼───┤
│HH │HT │
├───┼───┤
│HH │HHT│
├───┼───┤
│H  │HTT│
├───┼───┤
│HHT│HHT│
├───┼───┤
│HTT│HTT│
└───┴───┘
   ((next (] ,. transition { ]) ,~) non_terminal) 'HHT';'HTT'
┌───┬───┬───┐
│   │H  │   │
├───┼───┼───┤
│H  │HH │HT │
├───┼───┼───┤
│HH │HH │HHT│
├───┼───┼───┤
│HT │H  │HTT│
├───┼───┼───┤
│HHT│HHT│HHT│
├───┼───┼───┤
│HTT│HTT│HTT│
└───┴───┴───┘
   ((next ((' ';'H';'T') , ] ,. transition { ]) ,~) non_terminal) 'HHT';'HTT'
┌───┬───┬───┐
│   │H  │T  │
├───┼───┼───┤
│   │H  │   │
├───┼───┼───┤
│H  │HH │HT │
├───┼───┼───┤
│HH │HH │HHT│
├───┼───┼───┤
│HT │H  │HTT│
├───┼───┼───┤
│HHT│HHT│HHT│
├───┼───┼───┤
│HTT│HTT│HTT│
└───┴───┴───┘
   NB. 这样就得到了状态转移表
   table =: (' ';'H';'T') , ] ,. transition { ]
   transition_table =: (next table ,~) non_terminal
   transition_table 'HHT';'HTT'
┌───┬───┬───┐
│   │H  │T  │
├───┼───┼───┤
│   │H  │   │
├───┼───┼───┤
│H  │HH │HT │
├───┼───┼───┤
│HH │HH │HHT│
├───┼───┼───┤
│HT │H  │HTT│
├───┼───┼───┤
│HHT│HHT│HHT│
├───┼───┼───┤
│HTT│HTT│HTT│
└───┴───┴───┘

   NB. 接下来从状态转移表计算出状态转移矩阵
   0.2 (2 0 1 |: (((,1&amp;amp;-)&amp;#64;:[,&amp;quot;1 2])(i.&amp;#64;:#,:&amp;quot;0 1])&amp;#64;:((next transition,~)non_terminal))) 'HHT';'HTT'
0.2 0 1
0.2 1 2
0.2 2 2
0.2 3 1
0.2 4 4
0.2 5 5

0.8 0 0
0.8 1 3
0.8 2 4
0.8 3 5
0.8 4 4
0.8 5 5

   mat =: 3 : '({.&amp;quot;1 y) (;/ }.&amp;quot;1 y) } 0 $~ (],]) # y'
   matrix =: +/&amp;#64;:(mat&amp;amp;]&amp;quot;2)&amp;#64;:(2 0 1 |: (((, 1&amp;amp;-)&amp;#64;:[ ,&amp;quot;1 2 ]) (i.&amp;#64;:# ,:&amp;quot;0 1 ])&amp;#64;:((next transition ,~) non_terminal)))
   0.2 matrix 'HHT';'HTT'
0.8 0.2   0   0   0   0
  0   0 0.2 0.8   0   0
  0   0 0.2   0 0.8   0
  0 0.2   0   0   0 0.8
  0   0   0   0   1   0
  0   0   0   0   0   1

   NB. 有了状态转移矩阵，就可以代入上面的公式得到结果了
   0.2 (-&amp;#64;:#&amp;#64;:] ([ }.&amp;quot;0 1 }.) matrix) 'HHT';'HTT'
0.8 0.2   0   0
  0   0 0.2 0.8
  0   0 0.2   0
  0 0.2   0   0
   0.2 (-&amp;#64;:#&amp;#64;:] ([ {.&amp;quot;0 1 }.) matrix) 'HHT';'HTT'
  0   0
  0   0
0.8   0
  0 0.8
   prob =: (-&amp;#64;:#&amp;#64;:] ([ ({.&amp;quot;0 1 %. (=&amp;#64;i.&amp;#64;:# - ])&amp;#64;:(}.&amp;quot;0 1)) }.) matrix)
   0.2 prob 'HHT';'HTT'
0.238095    0.761905
0.238095    0.761905
       1 4.45607e_18
0.047619    0.952381
   ((] (+/ .*) ]) ^:_) 0.2 matrix 'HHT';'HTT'
0 0 0 0 0.238095 0.761905
0 0 0 0 0.238095 0.761905
0 0 0 0        1        0
0 0 0 0 0.047619 0.952381
0 0 0 0        1        0
0 0 0 0        0        1
   0.2 (]  (; &amp;amp; &amp;gt;) ({.&amp;#64;:prob)) 'HHT';'HTT'
┌───┬────────┐
│HHT│0.238095│
├───┼────────┤
│HTT│0.761905│
└───┴────────┘
   NB. 所有定义的中间函数
   solve =: ] ;&amp;amp;&amp;gt; {.&amp;#64;:prob
   prob = -&amp;#64;:#&amp;#64;:] ([ ({.&amp;quot;0 1 %. (=&amp;#64;i.&amp;#64;:# - ])&amp;#64;:(}.&amp;quot;0 1)) }.) matrix
   matrix =: +/&amp;#64;:(mat&amp;amp;]&amp;quot;2)&amp;#64;:(2 0 1 |: (((, 1&amp;amp;-)&amp;#64;:[ ,&amp;quot;1 2 ]) (i.&amp;#64;:# ,:&amp;quot;0 1 ])&amp;#64;:((next transition ,~) non_terminal)))
   mat =: 3 : '({.&amp;quot;1 y) (;/ }.&amp;quot;1 y) } 0 $~ (],]) # y'
   transition =: (1 i:~ endswith&amp;amp;&amp;gt;)&amp;quot;0 1
   endswith =: ] -: ({.~ -&amp;#64;:#)
   next =: ('HT' ,~&amp;amp;.&amp;gt;&amp;quot;1 0 ]) , [ ,. [
   non_terminal =: [: (([:/:#&amp;amp;&amp;gt;){]) '' ; # }. ~.&amp;#64;:(, ;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;))
   table =: (' ';'H';'T') , ] ,. transition { ]
   transition_table =: (next table ,~) non_terminal
   NB. 合并到一起
   solve=:];&amp;amp;&amp;gt;{.&amp;#64;:(-&amp;#64;:#&amp;#64;:]([({.&amp;quot;0 1%.(=&amp;#64;i.&amp;#64;:#-])&amp;#64;:(}.&amp;quot;0 1))}.)+/&amp;#64;:(3 :'({.&amp;quot;1 y)(;/}.&amp;quot;1 y)}0$~(,])#y'&amp;amp;]&amp;quot;2)&amp;#64;:(2 0 1|:(((,1&amp;amp;-)&amp;#64;:[,&amp;quot;1 2])(i.&amp;#64;:#,:&amp;quot;0 1])&amp;#64;:(((('HT',~&amp;amp;.&amp;gt;&amp;quot;1 0]),[,.[)(1 i:~(]-:({.~-&amp;#64;:#))&amp;amp;&amp;gt;)&amp;quot;0 1,~)([:(([:/:#&amp;amp;&amp;gt;){])'';#}.~.&amp;#64;:(,;&amp;#64;:(&amp;lt;\&amp;amp;.&amp;gt;)))))))
   NB. J语言还支持分数的形式
   1r2 solve 'HHT';'HTT'
┌───┬───┐
│HHT│2r3│
├───┼───┤
│HTT│1r3│
└───┴───┘
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Thu, 26 Feb 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-02-26:2015/penney-game.html</guid></item><item><title>工作流原理</title><link>https://bhuztez.github.io/2015/workflow-and-pi-calculus.html</link><description>&lt;p&gt;工作流是一个很简单的概念。自己实现工作流引擎的也不在少数，甚至有一些很奇怪的号称支持中国特色流程的。可是很多就算看了文档和代码，也很难理解为啥这可以工作，特别是他是怎么保证某个任务确实会执行。这方面就缺一个简单易懂的文章列表。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.workflowpatterns.com/"&gt;Workflow Patterns&lt;/a&gt; 这个网站倒是给了很多例子，适合用来检验功能是否足够。可是这上面的例子采用的模型是coloured petri-net，虽然例子很简单，光看图示和文字还是很费解的。看IBM developerWorks上的一系列文章，有助于更好的区分几个类似的pattern之间的区别 (差别很大啊，可是看Workflow Patterns很容易就绕进去了)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.ibm.com/developerworks/webservices/library/ws-impavdworkflowpart1/index.html"&gt;Implementing advanced workflow patterns in WebSphere Integration Developer and WebSphere Process Server, Part 1: Basic control flow patterns and cancellation and force completion patterns&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.ibm.com/developerworks/webservices/library/ws-impavdworkflowpart2/index.html"&gt;Implementing Advanced Workflow Patterns in WebSphere Integration Developer and WebSphere Process Server, Part 2: Multiple instance patterns and iteration patterns&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.ibm.com/developerworks/webservices/library/ws-impavdworkflowpart3/index.html"&gt;Implementing Advanced Workflow Patterns in WebSphere Integration Developer and WebSphere Process Server, Part 3: Advanced branching and synchronization patterns&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.ibm.com/developerworks/webservices/library/ws-impavdworkflowpart4/index.html"&gt;Implementing Advanced Workflow Patterns in WebSphere Integration Developer and WebSphere Process Server, Part 4: State-based, termination and trigger patterns&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一种常用的也是更容易理解的用来表示工作流的模型是pi-calculus。pi-calculus 可以看http://www.erlang.se/workshop/2005/noll_roy.pdf 这个。至于想不到怎么用pi-calculus表示工作流，可以参考 &lt;a class="reference external" href="http://bpt.hpi.uni-potsdam.de/pub/Public/FrankPuhlmann/diss.pdf"&gt;http://bpt.hpi.uni-potsdam.de/pub/Public/FrankPuhlmann/diss.pdf&lt;/a&gt; 和 &lt;a class="reference external" href="http://www.stefansen.dk/papers/smawl.pdf"&gt;http://www.stefansen.dk/papers/smawl.pdf&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Thu, 26 Feb 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-02-26:2015/workflow-and-pi-calculus.html</guid></item><item><title>Dialyzer</title><link>https://bhuztez.github.io/2015/dialyzer.html</link><description>&lt;p&gt;动态类型语言的静态类型分析突然变成了一件时髦的事。Facebook推出的Hack语言吸引了大量关注。王垠靠PySonar也收获了很多粉丝。可是Erlang依旧被认为是老土。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;在Hack和PySonar的开发开始之前，Erlang里就已经有了Dialyzer和Typer。前者可以检查类型是否符合spec，后者可以分析出程序的类型。不仅仅是这样，HiPE会根据Type Inference得到的类型信息把Erlang代码编译成Native code。实际上是先有HiPE的。Dialyzer和Typer里的类型分析算法最早就是从HiPE里拿来的。而且假如你不开HiPE，Dialyzer在给标准库建plt文件时，会花费特别长的时间。也就是说没有HiPE，这检查的速度根本就不实用。更可恶的是，运行的时候能用掉你所有核心100%的CPU时间，忘了在启动前加上比如 &lt;code&gt;+S 1:1&lt;/code&gt; 这样的参数可就惨了。&lt;/p&gt;
&lt;p&gt;假如你是非要看论文，那么可以看看 &lt;a class="reference external" href="http://www.it.uu.se/research/group/hipe/dialyzer/"&gt;DIALYZER: a DIscrepancy AnaLYZer for ERlang programs&lt;/a&gt; , &lt;a class="reference external" href="http://user.it.uu.se/~tobiasl/publications/typer.pdf"&gt;TYPER: A Type Annotator of Erlang Code&lt;/a&gt; ,  &lt;a class="reference external" href="http://www.it.uu.se/research/group/hipe/dialyzer/publications/succ_types.pdf"&gt;Pratical type inference based on success typings&lt;/a&gt; , &lt;a class="reference external" href="http://www.it.uu.se/research/group/hipe/dialyzer/publications/wrangler.pdf"&gt;Gradual Typing of Erlang programs: A Wrangler Experience&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Mon, 02 Feb 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-02-02:2015/dialyzer.html</guid></item><item><title>阴阳谜题</title><link>https://bhuztez.github.io/2015/yinyang-puzzle.html</link><description>&lt;p&gt;阴阳谜题是个很简单的问题，不过是揭示了call/cc is poor man's goto。可是总是有人觉得能搞明白阴阳谜题是一件很值得夸耀的事。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;阴阳谜题可以写成下面这样，无非这里每次 cc() 都会产生一个平行宇宙。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
yin = cc()
echo '&amp;#64;'
yang = cc()
echo '*'
yin(yang)
&lt;/pre&gt;
&lt;p&gt;pi-calculus足够用来表达call/cc的语义，可以把以下代码放到 &lt;a class="reference external" href="http://bhuztez.github.io/pi-diagram/"&gt;这里&lt;/a&gt; 观察运行过程。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
proc yin_cc(O,A,B) {
    new Yin in {
        yin(O,A,B,Yin) | send Yin to Yin
    }
}

proc yin(O,A,B,YinCC) {
    recv Yin from YinCC;
    send A to O;
    { yin(O,A,B,YinCC) | yang_cc(O,A,B,Yin) }
}

proc yang_cc(O,A,B,Yin) {
    new Yang in {
       yang(O,A,B,Yin,Yang) | send Yang to Yang
    }
}

proc yang(O,A,B,Yin,YangCC) {
    recv Yang from YangCC;
    send B to O;
    { yang(O,A,B,Yin,YangCC) | send Yang to Yin }
}

proc output(O) {
    recv X from O;
    output(O)
}

proc main() {
    new O, A, B in {
       output(O) | yin_cc(O,A,B)
   }
}
&lt;/pre&gt;
&lt;p&gt;当然也可以看下面&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
                  1     2
- = cc() | -=1 | -=? | -=1 |
echo '&amp;#64;'    &amp;#64;
+ = cc() | +=2 |     | +=? |
echo '*'    *                 3
-(+)     |     | -=2 |     | -=2 |
                  &amp;#64;
               | +=3 |     | +=? |
                  *
                     | +=3 |
                        *           4
               | -=3 |           | -=3 |
                  &amp;#64;
               | +=4 |           | +=? |
                  *
                           | +=4 |
                              *
                     | +=4 |
                        *
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Wed, 21 Jan 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-01-21:2015/yinyang-puzzle.html</guid></item><item><title>LISP中的Macro</title><link>https://bhuztez.github.io/2015/macro-in-lisp.html</link><description>&lt;p&gt;Paul Graham 在 The Roots of Lisp 一文中把 John McCarthy 的论文复述了一遍，还画蛇添足引入了 defun ，结果文中的解释器其实并不能自举。需要引入Macro之后才可以，讽刺的是，Paul Graham 整天吹嘘 Macro 多么强大，在这里却忘记了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;得像下面这样用 macro 来定义 defun 。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
(label defun
  (macro (n p e)
    (cons (quote label)
    (cons n
    (cons (cons (quote lambda)
          (cons p
          (cons e
                (quote ())
          )))
          (quote ())
    )))
  )
)
&lt;/pre&gt;
&lt;p&gt;比如定义 caar 为&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
(defun caar (x) (car (car x)))
&lt;/pre&gt;
&lt;p&gt;宏展开后得到&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
(label caar (lambda (x) (car (car x))))
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Tue, 20 Jan 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-01-20:2015/macro-in-lisp.html</guid></item><item><title>操作系统入门</title><link>https://bhuztez.github.io/2015/how-to-learn-operating-system.html</link><description>&lt;p&gt;好的操作系统教程很少。很多教程都是从bootloader该怎么写开始的，而bootloader一点都不好写。比如我就照着各种教程在bootloader上死了无数次了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;首先这是在学写操作系统，而不是把每个问题都搞对，先跑起来才是最重要的事。能绕过的就应该绕过，有的抄的代码就应该抄，而不是自己写。从这个角度看，MIT 6.828 Lab里的JOS是个不错的例子。&lt;/p&gt;
&lt;p&gt;JOS的问题是，他帮你把必要的非核心代码都实现了，也还是自己去实现了个bootloader，有点过头了，并不适合一个人从零开始学操作系统。用QEMU是没错的，实际上QEMU有-kernel参数，可以直接启动一个elf格式的支持multiboot的内核，并不需要自己写bootloader。启动需要的硬件信息也可以直接从multiboot info里取到，并不需要自己去取。自己去取更麻烦，各种历史遗留问题一点都不好处理。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Thu, 15 Jan 2015 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2015-01-15:2015/how-to-learn-operating-system.html</guid></item><item><title>Math is the new porn</title><link>https://bhuztez.github.io/2014/math-the-new-porn.html</link><description>&lt;p&gt;按现在流行的说法，smart is the new sexy, math is the new porn。在某种程度上，事实也的确如此。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;现在的确有很多人，你问他数学重要不重要，他会告诉你很重要，你问他他对数学有多少了解呢，他会告诉你需要很高的智商才能学习数学。且不说所谓的智商测验是否能反映和数学相关的智力，数学的发展必然是越来越简单的。原来有个抽象的问题解决不了，现在数学发展了，能解决了，那当然是比解决之前简单了。原来有个抽象的问题解起来很复杂，现在数学发展了，有了新的理论，解起来更方便了，这肯定是比原来简单了。&lt;/p&gt;
&lt;p&gt;总有几个数学专业的，觉得自己能学会复杂的概念是高智商的体现，根本不考虑自己是不是真的能向别人讲明白这个问题。要按这种说法，那也是能想到这些解法，能把人教会的人智商高。更是有些人刚刚站在了巨人的肩膀上，就开始认为巨人都是矮子，自己能搞出比他们复杂无数倍的概念，那才是真的有水平。&lt;/p&gt;
&lt;p&gt;现在这情况是非常糟糕的。在同样搞不明白的情况下，人们显然会选择更玄乎的概念。这也是为什么有些人用SVM一味往里加fancy的数学概念，完全不顾是否符合实际，仍然能获得关注。目前数学教材普遍也写的比较难以理解，或者说完全就是写给已经懂的人看的。&lt;/p&gt;
&lt;p&gt;即便电子计算机的发明已经过了几十年了，用计算机检查形式证明也完全是可行的。可是，至今仍然没有一本流行的数学教材，是提供了书里面所有定理的形式证明代码的。而Curry Howard Correspondence的另一面，现在已经很少有关于计算机程序的书籍，不提供书中例程的代码的。没有形式证明，一方面，读者没办法了解你到底假设了什么，另一方面，证明肯定隐藏着没有发现的错误，毕竟严密的数学怎么可能只用非形式语言就可以表达呢？&lt;/p&gt;
&lt;p&gt;光有形式证明还不够，在引入一个全新的概念时候，还需要大量的例子。很多数学教材在这方面做的都不够好，都很不情愿多举几个例子。数学的发展是越来越抽象的。越抽象就意味着依赖的假设越少。依赖的假设越少就越容易举例子才对啊。回忆一下你是怎么学会数数的，还不是一边举例，一边讲规则，知道能形成条件反射为止。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sun, 28 Dec 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-12-28:2014/math-the-new-porn.html</guid></item><item><title>变量的作用域</title><link>https://bhuztez.github.io/2014/scope.html</link><description>&lt;p&gt;假如一门语言允许你自己定义函数，那么就会出现作用域的问题。作用域的问题就是怎么找变量定义的问题。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;假如不允许自定义函数，只需要一个变量名到变量值的映射就可以了。不妨把这种映射关系称为Environment。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
%% 赋值前 {print: &amp;lt;fun&amp;gt;}
var a = 1
%% 赋值后 {print: &amp;lt;fun&amp;gt;, a: 1}
print(a)
&lt;/pre&gt;
&lt;p&gt;现在来定义一个函数&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
var a = 1
fun f(a)
    print(a)
end fun
f(2)
print(a)
&lt;/pre&gt;
&lt;p&gt;此时我们期望的结果是&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
2
1
&lt;/pre&gt;
&lt;p&gt;要是在执行 f(2) 时，我们直接把a指向2，那么结果就是&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
2
2
&lt;/pre&gt;
&lt;p&gt;所以，函数f需要一个独立的Environment。在执行f(2)先把当前Environment保存下来（比如存在一个栈里，因为f函数里也可以去调用别的函数），建一个新的Environment，把a指向2，之后才开始执行f函数。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
+------------------------------+
| {a:2}                        |
+------------------------------+
| {print: &amp;lt;fun&amp;gt;, a:1, f:&amp;lt;fun&amp;gt;} |
+------------------------------+
&lt;/pre&gt;
&lt;p&gt;不过这样就找不到print了。不过你一定想到了，只要沿着栈往下找总能找到的。&lt;/p&gt;
&lt;p&gt;定义作用域规则，假如变量在当前Environment里，找不到就到外层Environment里找，直到找到为止，假如找到最外面也没有，那就是根本就没定义。&lt;/p&gt;
&lt;p&gt;现在问题来了，看下面这个程序&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
var a = 1

fun f()
    print(a)
end

fun g(a)
    f()
end

g(2)
&lt;/pre&gt;
&lt;p&gt;假如使用上述规则，那么结果就是&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
2
&lt;/pre&gt;
&lt;p&gt;原因很简单，因为当前栈是像下面这样的&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
+-----------------------------------------+
| {}                                      |
+-----------------------------------------+
| {a:2}                                   |
+-----------------------------------------+
| {print: &amp;lt;fun&amp;gt;, a:1, f: &amp;lt;fun&amp;gt;, g: &amp;lt;fun&amp;gt;} |
+-----------------------------------------+
&lt;/pre&gt;
&lt;p&gt;这意味着，在定义函数时，除了当前Environment里定义的，我们不知道其他变量到底是在哪里定义的。&lt;/p&gt;
&lt;p&gt;我们把程序改一改&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
var a = 1

fun f()
    print(a)
end

fun g(print)
    f()
end

g(2)
&lt;/pre&gt;
&lt;p&gt;现在栈是像下面这样的&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
+-----------------------------------------+
| {}                                      |
+-----------------------------------------+
| {print:2}                               |
+-----------------------------------------+
| {print: &amp;lt;fun&amp;gt;, a:1, f: &amp;lt;fun&amp;gt;, g: &amp;lt;fun&amp;gt;} |
+-----------------------------------------+
&lt;/pre&gt;
&lt;p&gt;运行到 print(a) 那行就出错了。那该咋办？我们可以把这叫做动态作用域，宣称这是最powerful的作用域，假如你不会用，那是因为你笨。这样问题就解决了。&lt;/p&gt;
&lt;p&gt;可是我是弱智啊。我只能在定义时，就把所有会用到的变量都先存起来。找变量时，只在当前Environment里找。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
+-------------------------------------------------+
| {print: &amp;lt;fun&amp;gt;, a:1}                             |
+-------------------------------------------------+
| {print:2,                                       |
|  f: {&amp;lt;fun&amp;gt;,{print: &amp;lt;fun&amp;gt;,a:1}}}                 |
+-------------------------------------------------+
| {print: &amp;lt;fun&amp;gt;, a:1,                             |
|  f: {&amp;lt;fun&amp;gt;,{print:&amp;lt;fun&amp;gt;, a:1}},                 |
|  g: {&amp;lt;fun&amp;gt;,{a:1, f: {&amp;lt;fun&amp;gt;,{print:&amp;lt;fun&amp;gt;,a:1}}}} |
+-------------------------------------------------+
&lt;/pre&gt;
&lt;p&gt;这样就没问题了。这就是所谓的lexical scope&lt;/p&gt;
&lt;p&gt;看下面这个程序&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
var a = 1

fun f()
    var a = a + 1
    print(a)
end

f()
&lt;/pre&gt;
&lt;p&gt;在函数 f 里，a既是在外部定义的，又是在内部定义的。这样就有矛盾了。&lt;/p&gt;
&lt;p&gt;有些语言的应对方式是在函数内部可以有多个Environment，规则类似动态作用域。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
+---------------------------------+
| +-----------------------------+ |
| | {a: 2}                      | |
| +-----------------------------+ |
| | {print: &amp;lt;fun&amp;gt;, a:1}         | |
| +-----------------------------+ |
+---------------------------------+
| {print: &amp;lt;fun&amp;gt;, a:1,             |
|  f: {&amp;lt;fun&amp;gt;,{print:&amp;lt;fun&amp;gt;, a:1}}} |
+---------------------------------+
&lt;/pre&gt;
&lt;p&gt;这样上面这段程序就能运行了。&lt;/p&gt;
&lt;p&gt;有些语言不喜欢你这么定义，直接就不让你运行这样的程序。这似乎没啥问题。&lt;/p&gt;
&lt;p&gt;有的语言的规则是local by default的，赋值就相当于定义了一个本地的变量。也就是&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
a = 1
&lt;/pre&gt;
&lt;p&gt;相当于&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
var a = 1
&lt;/pre&gt;
&lt;p&gt;这看上去也没什么问题。可是要是这语言变量的值是可以改的，那就糟了。内层函数就没法改外层函数变量的值了。这就需要引入 nonlocal 关键字了。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Fri, 26 Dec 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-12-26:2014/scope.html</guid></item><item><title>Scalable Source Routing</title><link>https://bhuztez.github.io/2014/scalable-source-routing.html</link><description>&lt;p&gt;有很多关于adhoc network如何避免flooding的研究。其中一个是Scalable Source Routing，其主要思路借鉴自DHT。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;现在考虑一种简化的DHT。DHT是为了在N个节点上存储好多Key -&amp;gt; Value的数据。假如你的节点编号为 1 2 3 4 5 ，那么 hash(Key) 为 1 的那就存到节点1，依次类推。假如你其实只有2 4两个节点在工作。你要把1 2 3 4 5看成一个环，也就是5的下一个节点是1。此时，把hash(Key)为5 1 2的数据存在节点2，把hash(Key)为3 4的数据存在节点4。&lt;/p&gt;
&lt;p&gt;不过怎么存数据和你没什么关系。把这种思路用于路由协议的时候，现在假设有7个节点1 2 3 4 5 6 7。比如节点3要记住一条到节点2的路径和一条到节点4的路径。这样，比如节点1要找到节点4的路径，因为节点1知道一条到节点2的路径，所以节点1可以问节点2，节点2可以问节点3，节点3知道一条到节点4的路径，把这几条路径串起来，就是一条从节点1到节点4的路径，当然了，你得去掉这中间出现的环，不然就是在兜圈子嘛。假如只剩下1 3 5 7，那么1要记住到3和7的路径，也就是要记住按逻辑编号排成一圈之后你的neighbour的编号。&lt;/p&gt;
&lt;p&gt;一个个节点问过去是很慢的，所以你还需要从真正的DHT，比如Chord, Kademlia里借鉴点东西来加快找路径的速度。这样就能避免flooding了。这样做经常不能返回当前的延时最短路径 &lt;a class="footnote-reference" href="#ssr" id="id1"&gt;[1]&lt;/a&gt; 。&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="ssr" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.net.t-labs.tu-berlin.de/talks/2010-01-13-fuhrmann.pdf"&gt;http://www.net.t-labs.tu-berlin.de/talks/2010-01-13-fuhrmann.pdf&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Tue, 09 Dec 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-12-09:2014/scalable-source-routing.html</guid></item><item><title>用Datalog管理权限</title><link>https://bhuztez.github.io/2014/access-control-with-datalog.html</link><description>&lt;p&gt;用普通SQL数据库管理权限是一件很别扭的事。一方面是有大量不必要的数据冗余，取消起来也特别麻烦。另外一方面，只要出现几条例外的规则，就不得不在代码里硬编码部分权限。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;而在分配权限时，往往先把人分出一些角色，而服务则要为不同角色指定不同权限。这个思路更接近Datalog，而不是SQL。用普通SQL数据库管理权限相当于人工把权限都展开了。用Datalog就没法用数据库了，这也就不需要专用的运行数据库机器了。因为规则数量大大减少，用纯文本记录都是可行的，这样反而备份更方便，随便用一下git/hg之类的工具，就自动有很多备份了嘛。也不存在数据库瓶颈了，因为全都复制一份在本地查询了。因为也保留了完全的历史，出现问题要找也方便的多。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Mon, 08 Dec 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-12-08:2014/access-control-with-datalog.html</guid></item><item><title>Pouring Water</title><link>https://bhuztez.github.io/2014/pouring-water.html</link><description>&lt;p&gt;Pouring Water看上去是个很简单的问题，有容量分别为a升，b升的两个没有刻度的容器，问量出c升水要多少步。简单是简单，只是分情况讨论的数量实在是有点多，很多人一看就直接放弃了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;以下是证明思路，具体证明就不写了&lt;/p&gt;
&lt;p&gt;首先看简单的情形：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;若 c &amp;gt; a 且 c &amp;gt; b,没有一个容器装得下 c 升的水,所以无解。&lt;/li&gt;
&lt;li&gt;若 c = a 或 c = b,那么直接把 a 或 b 倒满就可以了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为有 a,b 两个容器,可以看成有六种操作&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;empty(a) 倒空 a&lt;/li&gt;
&lt;li&gt;empty(b) 倒空 b&lt;/li&gt;
&lt;li&gt;fill(a) 倒满 a&lt;/li&gt;
&lt;li&gt;fill(b) 倒满 b&lt;/li&gt;
&lt;li&gt;pour(a,b) a 倒向 b&lt;/li&gt;
&lt;li&gt;pour(b,a) b 倒向 a&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不妨设 a,b 内实际水量分别为 A, B。一开始 A = 0, B = 0，所以, a * x1 + b * y1 = A 和 a * x2 + b * y2 = B 都有整数解。即 x1 = 0, y1 = 0, x2 = 0, y2 = 0&lt;/p&gt;
&lt;p&gt;若操作前,a * x1 + b * y1 = A 和 a * x2 + b * y2 = B 都有整数解。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;若进行的是操作 1,完成后,B 不变,A 变成 0,所以两者仍然都有整数解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;若进行的是操作 2,完成后,A 不变,B 变成 0,所以两者仍然都有整数解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;若进行的是操作 3,完成后,B 不变,A 变成 a,所以两者仍然都有整数解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;若进行的是操作 4,完成后,A 不变,B 变成 b,所以两者仍然都有整数解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;若进行的是操作 5,完成后,总水量不变,仍然是 a(x1 + x2) + b(y1 + y2)，分情况讨论&lt;/dt&gt;
&lt;dd&gt;&lt;ol class="first last arabic simple"&gt;
&lt;li&gt;若把 B 倒满了,那么此时 A = a(x1 + x2) + b(y1 + y2 − 1),所以两者仍然都有整数解。&lt;/li&gt;
&lt;li&gt;若没把 B 倒满,则 A 必然被倒空了,所以两者仍然都有整数解。&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;若进行的是操作 6,完成后,类似操作 5,分情况讨论&lt;/dt&gt;
&lt;dd&gt;&lt;ol class="first last arabic simple"&gt;
&lt;li&gt;若把 A 倒满了,那么此时 B = a(x1 + x2 − 1) + b(y1 + y2),所以两者仍然都有整数解。&lt;/li&gt;
&lt;li&gt;若没把 A 倒满,则 B 必然被倒空了,所以两者仍然都有整数解。&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以,只要操作前有整数解,操作后仍然会有整数解。即, c = a*x + b*y 也一定有整数解。根据 Bezout’s identity,当且仅当 c 是 gcd(a, b) 的整数倍时,c = a*x + b*y 才有整数解。所以,若 c 不能被 gcd(a, b) 整除,那么本题无解。&lt;/p&gt;
&lt;p&gt;不妨设,c = a*x + b*y,分情况讨论&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;若 a &amp;gt; b,则根据上面的讨论,若本题有解,必有 c &amp;lt; a。那么 x 和 y 必一正一负。若两者同时为负,则 c &amp;lt; 0,与 c &amp;gt; 0 矛盾。若两者同时为正,则 c &amp;gt; a,与 c &amp;lt; a 矛盾。&lt;/li&gt;
&lt;li&gt;若 a &amp;lt; b,类似的,x 和 y 必一正一负。&lt;/li&gt;
&lt;li&gt;若 a = b,则根据上面的讨论,c = a = b,这种情况在前面就讨论过了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;假设最少的操作序列的第 n 步为 fill(a) 。分情况讨论&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;若第n+1步为 fill(a) 或 pour(b,a) ，这一步没有任何作用&lt;/li&gt;
&lt;li&gt;若第n+1步为 empty(a) ，和第n步直接empty(a)结果相同，故与最少操作数矛盾&lt;/li&gt;
&lt;li&gt;若第n+1步为 empty(b) ，和在第一步 fill(a) 结果相同，故与最少操作数矛盾&lt;/li&gt;
&lt;li&gt;若第n+1步为 fill(b) ，和在前两步，直接fill(a)，fill(b)相同，若n&amp;gt;1，与最少操作数矛盾。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;假设最开始两步是 fill(a) ，fill(b) ，若c=a或c=b，一步就已经完成了，与最少操作数矛盾。否则，下一步只能是empty(a)或empty(b)，结果分别和只在第一步fill(b)，fill(a)相同，故与最少操作数矛盾。&lt;/p&gt;
&lt;p&gt;所以 fill(a) 的下一步只能是 pour(a,b)&lt;/p&gt;
&lt;p&gt;假设最少的操作序列的第 n 步为 pour(a,b) 。分情况讨论&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;若第n+1步为 pour(b,a) ，因为pour操作不影响总水量，所以和在第n步直接 pour(b,a) 结果相同，故与最少操作数矛盾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;若第n+1步为 pour(a,b) ，不会有任何变化，故与最少操作数矛盾。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;若第n步把a倒空了&lt;/dt&gt;
&lt;dd&gt;&lt;ol class="first last arabic simple"&gt;
&lt;li&gt;若第n+1步为 empty(a) ，这一步没有任何作用&lt;/li&gt;
&lt;li&gt;若第n+1步为 empty(b) ，等于把两个容器都倒空了，回到初始状态，故与最少操作数矛盾&lt;/li&gt;
&lt;li&gt;若第n+1步为 fill(b) ，和在第一步 fill(b) 结果相同，故与最少操作数矛盾&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;若第n步把b倒满了&lt;/dt&gt;
&lt;dd&gt;&lt;ol class="first last arabic simple"&gt;
&lt;li&gt;若第n+1步为 fill(b) ，这一步没有任何作用&lt;/li&gt;
&lt;li&gt;若第n+1步为 fill(a) ，等于把两个容器都倒满了，这种情况之前已经讨论过了，与最少操作数矛盾&lt;/li&gt;
&lt;li&gt;若第n+1步为 empty(a) ，和在第一步 fill(a) 结果相同，故与最少操作数矛盾&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，假如第一步fill(a)，步数最少的操作方式为&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;fill(a)&lt;/li&gt;
&lt;li&gt;pour(a,b)&lt;/li&gt;
&lt;li&gt;若 a 为空,回到 1&lt;/li&gt;
&lt;li&gt;empty(b)&lt;/li&gt;
&lt;li&gt;回到 2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同理可得，假如第一步fill(b)，步数最少的操作方式为&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;fill(b)&lt;/li&gt;
&lt;li&gt;pour(b,a)&lt;/li&gt;
&lt;li&gt;若 b 为空,回到 1&lt;/li&gt;
&lt;li&gt;empty(a)&lt;/li&gt;
&lt;li&gt;回到 2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;交换 a,b,第一种就变成了第二种。现在就只讨论第一种。&lt;/p&gt;
&lt;p&gt;若 a &amp;gt; b,每一次 fill(a) 后,都会不断地 pour(a,b),empty(b),直到 pour(a,b)不足以倒满 b。假如把倒满 b 的 pour(a,b) 和 empty(b) 看作一组操作,把 fill(a)和没倒满 b 的 pour(a,b) 看作一组操作,总操作次数就是 fill(a) 和 empty(b) 次数之和的两倍。不过,若 a 是 b 的整数倍,不会出现,pour(a,b) 不足以倒满b 的情况,实际上,此时只需要在 fill(a) 后,倒出 a-c 升水即可,因此,只要2 (a−c)/b 次操作就可以了。在非整数倍的情况,最后一次 pour(a,b) 后,并不需要 empty(b),且最后一次fill(a),没有对应的没倒满 b 的 pour(a,b),所以总操作次数要减去 2&lt;/p&gt;
&lt;p&gt;若 a &amp;lt; b,会不断地 fill(a),pour(a,b),直到把 b 倒满。假如把 fill(a) 和向 b 倒入 a 升水的 pour(a,b) 看成一组操作,把 empty(b),和向 b 倒入不足 a 升水的 pour(a,b) 看成一组操作,总操作次数就是 fill(a) 和 empty(b) 次数之和的两倍。不过,若 b 是 a 的整数倍,不会出现向 b 倒入不足 a 升水的 pour(a,b) 的情况,因为此时 c 也是 a 的整数倍,只需要 2c/a 次操作就可以了。在非整数倍的情况,若 a &amp;gt; c,则 a 不为空也不满时,必然是刚好把 b 倒满。和上一种情况类似,最后一次 pour(a,b) 后,并不需要 empty(b),也没有对应的向 b 倒入不足 a 升水的 pour(a,b),所以总操作次数要减去 2若 a &amp;lt; c,所以最后必然是 b 中装 c 升水。所以总操作数不需要减。&lt;/p&gt;
&lt;p&gt;现在就要找出最少的 fill(a) 和 empty(b) 次数之和。根据前面的讨论,a*x + b*y = c 的整数解,x,y 必一正一负。&lt;/p&gt;
&lt;p&gt;不妨设其中一种情况为,a*k1 - b*k2 = c,且 k1 &amp;gt; 0, k2 &amp;gt; 0。因为 a * k1 = c + b * k2 ,所以 k1 越大,k2 就越大。所以只要求出最小的 k1 ,就能求出最少的 fill(a) 和 empty(b) 次数之和。另一种情况,-a * k1 + b * k2 = c,且 k1 &amp;gt; 0, k2 &amp;gt; 0,也是类似的。&lt;/p&gt;
&lt;p&gt;使用扩展欧几里德算法,可以分别求出两种情况下的解,取小的就可以了。总结,&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;若 c &amp;gt; a 且 c &amp;gt; b,无解&lt;/li&gt;
&lt;li&gt;若 c = a 或 c = b,最少需要 1 步操作&lt;/li&gt;
&lt;li&gt;若 a = b 且 c &amp;lt;&amp;gt; a 且 c &amp;lt;&amp;gt; b,无解&lt;/li&gt;
&lt;li&gt;若 gcd(a, b) 能整除 c,有解&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;gcd(a, b) 能整除 c 的情况&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;若 a 是 b 的整数倍,那么取 2(a−c)/b 和 2c/b 中的最小值&lt;/li&gt;
&lt;li&gt;若 b 是 a 的整数倍,那么取 2(b−c)/a 和 2c/a 中的最小值&lt;/li&gt;
&lt;li&gt;其他情况,取分别以 a,b 代入 a,b,以 b,a 代入 a,b,按以下方法求出操作步数的最小值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用扩展欧几里德算法求出 k 使得 k * a ≡ gcd(a, b) (mod b)，令 k1 为 k * c / gcd(a,b) (mod b),有 k1 * a ≡ c (mod b)，令 k2 为 k1 * a−c/b，所以有 a * k1 − b * k2 = c&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;若 a &amp;lt; b 且 a &amp;lt; c,操作步数为 2 (k1 + k2 )&lt;/li&gt;
&lt;li&gt;其他情况,操作步数为 2 (k1 + k2 − 1)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简化分类
因为只需要步数,而不需要具体步骤,交换 a,b 不影响结论。假如 a 是 a,b 中小的那个,b 是 a,b 中大的那个。那么一开始只要判断 c 是否比 b 大就可以了,同时后面也不需要判断 a 是否是b 的整数倍了。&lt;/p&gt;
&lt;p&gt;而 a = b 时,若 c &amp;lt; b,gcd(a, b) 必然不能整除 c,所以没必要单独判断。这样,就可以合并为&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;若 c &amp;gt; b,无解&lt;/li&gt;
&lt;li&gt;若 c = a 或 c = b,最少需要 1 步操作。&lt;/li&gt;
&lt;li&gt;若 b 是 a 的整数倍,取 2 (b−c)/a 和 2 c/a 中的最小值&lt;/li&gt;
&lt;li&gt;若 gcd(a, b) 能整除 c,有解。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为扩展欧几里德算法可以同时计算两种情况以及 gcd(a, b)。所以没必要做三次辗转相除,一次就可以完成计算了。&lt;/p&gt;
&lt;p&gt;扩展欧几里德算法&lt;/p&gt;
&lt;p&gt;为了求 k 使得 ka ≡ gcd(a, b) (mod b) 令 k1 = 1, k2 = 0, r1 = a, r2 = b 每一步,替换 k1 = k2 − k1 * floor(r2/r1) , k2 = k1 , r1 = r2 − r1 * floor(r2/r1) , r2 = r1 迭代过程中始终满足&lt;/p&gt;
&lt;p&gt;k1 * a = r1 (mod b)&lt;/p&gt;
&lt;p&gt;k2 * a = r2 (mod b)&lt;/p&gt;
&lt;p&gt;因为 (k2−k1*floor(r2/r1) )a = k2*a−k1*a*floor(r2/r1) = r2−r1*floor(r2/r1) (mod b) 所以最终,当 r1 = 0 时,r2 = gcd(a, b),此时的 k2 就是要求的 k。而求 k 使得 k * b ≡ gcd(a, b) (mod a) 时,一开始 k1 = 1, k2 = 0, r1 = b, r2 = a 计算一步后,k1 = 0, k2 = 1, r1 = a, r2 = b 所以,两种情况可以同时计算。&lt;/p&gt;
&lt;p&gt;另外,还可以改变初值。&lt;/p&gt;
&lt;p&gt;令 k1 = c, k2 = 0, r1 = a, r2 = b 一开始&lt;/p&gt;
&lt;p&gt;k1 * a = c * a = c * r1 = c * r1 (mod b)&lt;/p&gt;
&lt;p&gt;k2 * a = 0 * a = 0 = c*b = c * r2 (mod b)&lt;/p&gt;
&lt;p&gt;而 (k2−k1*floor(r2/r1))a = k2*a−k1*a*floor(r2/r1) = c(r2−r1*floor(r2/r1)) (mod b)&lt;/p&gt;
&lt;p&gt;所以迭代过程中始终满足&lt;/p&gt;
&lt;p&gt;k1 * a = c * r1 (mod b)&lt;/p&gt;
&lt;p&gt;k2 * a = c * r2 (mod b)&lt;/p&gt;
&lt;p&gt;因此,最后当 r1 = 0 时,r2 = gcd(a, b),k2 * a = c * gcd(a, b) (mod b) 一开始 k1 , k2 都是 gcd(a, b) 的倍数,迭代过程中,始终减去的都是整数倍的 k1 ,所以,最终 k1 , k2 一直是 gcd(a, b) 的倍数。所以,最终 k2 * a / gcd(a,b) = c (mod b) 再回到 b 是 a 的整数倍的情况。假如也使用上述方法求解,一步就计算结束了,得到 c/a 和 0。 c/a满足要求。而 0 不满足要求,改成 1 即可满足要求。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sun, 23 Nov 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-11-23:2014/pouring-water.html</guid></item><item><title>Metamath</title><link>https://bhuztez.github.io/2014/metamath.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://metamath.org/"&gt;Metamath&lt;/a&gt; 是一个很独特的证明检查程序。Metamath语义非常简单，完全可以自己实现一遍。而且更加专注于证明本身，并不需要打补丁以便更好的支持新的理论。比如Unimath为了更好的支持Homotopy Type Theory就对Coq打了补丁。这一点很重要，要是我们不能检查证明检查程序本身正确与否，我们写的证明即使通过了检查，也不能说明证明没问题。而一个证明检查程序本身太复杂，超过了人力能检查的极限，那么出现重大缺陷就几乎不可避免了，比如Coq的 &lt;a class="reference external" href="http://inutile.club/estatis/falso/"&gt;Falso&lt;/a&gt; 。很不幸的是，Metamath风格的证明检查工具一直没有流行起来。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Metamath特别简单，主要是因为两点，一是没有内置任何Type Theory，二是没有作用域的概念。大部分数学书根本就没有定义用到的数学符号里作用域的规则。为了能表达free variable的概念，不可避免要引入特殊的语句。Metamath取消了作用域，这意味着你必须给原本不同作用域中的变量取不同的名字，但是避免了引入特殊的语句。&lt;/p&gt;
&lt;p&gt;Metamath也有做的比较糟糕的地方。现在Metamath把所有内容都写同一个文件里，实际上这是没有必要的，也对别人的参与产生了一点小麻烦，毕竟只有一个文件，那必须等都很合理了才会放进去，而不是可以先在一个不同的文件里放一个实验性质的证明。这也妨碍了用其他程序来生成证明，毕竟不可能有通用的proof assistant，对于所有理论的证明都能提供足够的帮助，根据不同情况用SMT Solver，计算机代数软件什么的来生成证明是很必要的。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Mon, 17 Nov 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-11-17:2014/metamath.html</guid></item><item><title>二十四点去重</title><link>https://bhuztez.github.io/2014/distinct-game24-solution.html</link><description>&lt;p&gt;二十四点解法去重的思路很简单，就是根据把语法树根据等价公式找出相邻的语法树，得到以语法树为节点的边的集合，根据这个集合，进行unification，这样就把结果分组了，有几个组就是有几个不同的结果。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="ni"&gt;module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game24&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="ni"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;export_all&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;permutation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,_)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[[]];&lt;/span&gt;
&lt;span class="nf"&gt;permutation&lt;/span&gt;&lt;span class="p"&gt;(_,[])&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nf"&gt;permutation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]||&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;permutation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;])].&lt;/span&gt;

&lt;span class="nf"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nf"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="ow"&gt;rem&lt;/span&gt; &lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="nb"&gt;is_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nf"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;         &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;G&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;X&lt;/span&gt; &lt;span class="ow"&gt;div&lt;/span&gt; &lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Y&lt;/span&gt; &lt;span class="ow"&gt;div&lt;/span&gt; &lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;

&lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="p"&gt;},{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="p"&gt;},{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="p"&gt;},{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="p"&gt;},{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;B1&lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;

&lt;span class="nf"&gt;rpn&lt;/span&gt;&lt;span class="p"&gt;([],&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;rpn&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;NH&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;NT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;Ops&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;rpn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;NT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Ops&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;NH&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nf"&gt;rpn&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;Nums&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;OH&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;OT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;rpn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Nums&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;OT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;OH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;))|&lt;/span&gt;&lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;

&lt;span class="nf"&gt;rpn2tree&lt;/span&gt;&lt;span class="p"&gt;([],&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nf"&gt;rpn2tree&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;NH&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;NT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;Ops&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;rpn2tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;NT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Ops&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;NH&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nf"&gt;rpn2tree&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;Nums&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;OH&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;OT&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;rpn2tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;AT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Nums&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;OT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;OH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}|&lt;/span&gt;&lt;span class="nv"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;

&lt;span class="nf"&gt;n1&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;O&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;O&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}||&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;neighbours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;O&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;}||&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;neighbours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="nf"&gt;n1&lt;/span&gt;&lt;span class="p"&gt;(_)&lt;/span&gt;      &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[].&lt;/span&gt;

&lt;span class="c"&gt;%% A+B = B+A
%% A*B = B*A
&lt;/span&gt;
&lt;span class="nf"&gt;n2&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n2&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n2&lt;/span&gt;&lt;span class="p"&gt;(_)&lt;/span&gt;        &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[].&lt;/span&gt;

&lt;span class="c"&gt;%% (A+B)+C = A+(B+C)
%% (A*B)*C = A*(B*C)
&lt;/span&gt;
&lt;span class="nf"&gt;n3&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n3&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n3&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n3&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n3&lt;/span&gt;&lt;span class="p"&gt;(_)&lt;/span&gt;                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[].&lt;/span&gt;

&lt;span class="c"&gt;%% (A-B)+C = A+(C-B) = (A+C)-B = A-(B-C)
%% (A/B)*C = A*(C/B) = (A*C)/B = A/(B/C)
&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;(_)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;[].&lt;/span&gt;

&lt;span class="c"&gt;%% (A-B)-C = A-(B+C) = (A-C)-B
%% (A/B)/C = A/(B*C) = (A/C)/B
&lt;/span&gt;
&lt;span class="nf"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nf"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;({{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[{{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="p"&gt;}}];&lt;/span&gt;
&lt;span class="nf"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;(_)&lt;/span&gt;                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[].&lt;/span&gt;

&lt;span class="nf"&gt;neighbours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;n1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;n2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;n3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;n4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;n5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;indexof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;indexof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;indexof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;|_])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nf"&gt;indexof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[_|&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;indexof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;E&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;nth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;H&lt;/span&gt;&lt;span class="p"&gt;|_])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;H&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nf"&gt;nth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[_|&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;unify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nn"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
        &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nn"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
                &lt;span class="nv"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;B&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
                        &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
                            &lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;_&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
                            &lt;span class="nn"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;M&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
                    &lt;span class="n"&gt;unify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;N&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;unify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nf"&gt;unify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;unify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;solve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nv"&gt;Actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;
         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="nv"&gt;Results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rpn2tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="nv"&gt;O1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;O2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;O3&lt;/span&gt;&lt;span class="p"&gt;],[])&lt;/span&gt;
         &lt;span class="p"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;Actions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;permutation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Nums&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nv"&gt;O1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="nv"&gt;O2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="nv"&gt;O3&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;rpn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="nv"&gt;O1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;O2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;O3&lt;/span&gt;&lt;span class="p"&gt;],[])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;

    &lt;span class="nv"&gt;Neighbours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;indexof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;indexof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;B&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;neighbours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;

    &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="nv"&gt;Map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;to_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="n"&gt;unify&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;from_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="nv"&gt;Neighbours&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;Results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;||&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nv"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;运行结果&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
1&amp;gt; game24:solve([1,3,8,12]).
[{1,'+',{12,'+',{3,'+',8}}},
 {8,'*',{{12,'/',3},'-',1}},
 {12,'*',{8,'/',{1,'+',3}}}]
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Tue, 04 Nov 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-11-04:2014/distinct-game24-solution.html</guid></item><item><title>在Fedora上继续使用GRUB</title><link>https://bhuztez.github.io/2014/keep-grub-on-fedora.html</link><description>&lt;p&gt;Fedora从某个版本开始默认使用GRUB2了。实在搞不明白无比复杂的GRUB2，还是继续用GRUB吧。可是没过多久fedora-logos里都不带GRUB的背景图了，只好果断抛弃，用generic-logos。另外还在 &lt;code&gt;/etc/yum.conf&lt;/code&gt; 里把GRUB2什么的统统禁掉，免得distro-sync完了以后GRUB没了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;pre class="code literal-block"&gt;
exclude=grub2 grub-efi grub2-efi
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sun, 19 Oct 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-10-19:2014/keep-grub-on-fedora.html</guid></item><item><title>用Erlang写HTTP Server</title><link>https://bhuztez.github.io/2014/http-server-in-erlang.html</link><description>&lt;p&gt;很多人都在吹嘘REST架构。然而他们所谓的REST架构往往指的就是正确使用HTTP语义。REST架构的确是建立在正确使用HTTP语义之上的，然而在正确使用HTTP语义只是实现REST架构的基础。而那些吹嘘REST架构的人，往往号称自己是Web程序员。他们能对SSH框架，Rails框架侃侃而谈，却对HTTP协议一无所知，所以才会觉得REST很新鲜。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;了解HTTP语义最好的方法，当然是照着RFC自己实现一遍了。推荐用Erlang来写。用Erlang你不再需要担心线程进程或者事件驱动，也不需要自己去解析HTTP Header，那当然是很方便了。&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="ni"&gt;module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="ni"&gt;export&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handle_connection&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;

&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;packet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;reuseaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}]),&lt;/span&gt;
    &lt;span class="nv"&gt;Pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nv"&gt;MODULE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;controlling_process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Pid&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nf"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Conn&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nv"&gt;Pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nv"&gt;MODULE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handle_connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Conn&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;controlling_process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Conn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Pid&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="nv"&gt;MODULE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;handle_connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;http_request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nv"&gt;Headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recv_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;inet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;setopts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;packet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;}]),&lt;/span&gt;
    &lt;span class="n"&gt;handle_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="nf"&gt;recv_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;http_header&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;_,&lt;/span&gt; &lt;span class="nv"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;_,&lt;/span&gt; &lt;span class="nv"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nv"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;}|&lt;/span&gt;&lt;span class="n"&gt;recv_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http_eoh&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nf"&gt;handle_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;abs_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;_)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HTTP/1.1 200 OK&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Connection: close&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Content-Type: text-plain&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OK&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="n"&gt;ok&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;gen_tcp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;运行&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
erl -make
erl -run server
&lt;/pre&gt;
&lt;p&gt;在浏览器里打开 &lt;a class="reference external" href="http://127.0.0.1:8080/"&gt;http://127.0.0.1:8080/&lt;/a&gt; ，你就会看到 OK 。现在你就可以开始动手实现HTTP协议了。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Fri, 10 Oct 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-10-10:2014/http-server-in-erlang.html</guid></item><item><title>中国剩余定理</title><link>https://bhuztez.github.io/2014/chinese-remainder-theorem.html</link><description>&lt;p&gt;本文纯属搞笑，切勿当真&lt;/p&gt;
&lt;p&gt;中国剩余定理这个叫法是对这种方法的极大误解。根据中国人只追求实用的天赋，肯定不会没事去证明某种数学性质的。要是给不出解法，就算证明了一个很重要的性质，一句这有啥用就噎死了。中国剩余定理实际上是为了解一种同余方程组。中国剩余定理很可能不是中国人最早证明的，完整的解法也很可能不是中国人最早给出的，只是因为孙子算经中对这种同余方程组给出了不完整的解法，这就叫中国剩余定理了，和费马大定理有异曲同工之妙。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;求正整数 &lt;span alt="x" class="formula"&gt;
&lt;i&gt;x&lt;/i&gt;&lt;/span&gt;
 使得&lt;/p&gt;
&lt;div alt="\left\{\begin{array}{l l} x \equiv a_1 &amp;amp; (mod\ m_1) \\ x \equiv a_2 &amp;amp; (mod\ m_2) \\ \ldots \\ x \equiv a_n &amp;amp; (mod\ m_n) \end{array}\right." class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎧&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎪&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎪&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎨&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎪&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎪&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;x&lt;/i&gt; ≡ &lt;i&gt;a&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align- "&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align- "&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;x&lt;/i&gt; ≡ &lt;i&gt;a&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align- "&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align- "&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
…
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;x&lt;/i&gt; ≡ &lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align- "&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="emptydot"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;找出任意一个满足这个同余方程组的 &lt;span alt="x" class="formula"&gt;
&lt;i&gt;x&lt;/i&gt;&lt;/span&gt;
 后，根据中国剩余定理即可得到最小的 &lt;span alt="x" class="formula"&gt;
&lt;i&gt;x&lt;/i&gt;&lt;/span&gt;
 。&lt;/p&gt;
&lt;p&gt;用构造法，求 &lt;span alt="b_i, i \in \{1, 2, \ldots, n\}" class="formula"&gt;
&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;i&lt;/i&gt; ∈ {1, 2, …, &lt;i&gt;n&lt;/i&gt;}&lt;/span&gt;
 使得&lt;/p&gt;
&lt;div alt="\forall ( j \in \{1, 2, \ldots, n\}, j \ne i) m_j \mid b_i" class="formula"&gt;
∀(&lt;i&gt;j&lt;/i&gt; ∈ {1, 2, …, &lt;i&gt;n&lt;/i&gt;}, &lt;i&gt;j&lt;/i&gt; ≠ &lt;i&gt;i&lt;/i&gt;)&lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;∣&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;p&gt;记 &lt;span alt="b_i" class="formula"&gt;
&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;
 和 &lt;span alt="m_i" class="formula"&gt;
&lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;
 的最大公约数为 &lt;span alt="gcd(b_i, m_i)" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;
 。若有&lt;/p&gt;
&lt;div alt="gcd(b_i, m_i) \mid a_i" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)∣&lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;p&gt;且存在 &lt;span alt="k_i, i \in \{1, 2, \ldots, n\}" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;i&lt;/i&gt; ∈ {1, 2, …, &lt;i&gt;n&lt;/i&gt;}&lt;/span&gt;
 满足&lt;/p&gt;
&lt;div alt="k_i b_i \equiv gcd(b_i, m_i) (mod\ m_i) i \in \{1, 2, \ldots, n\}" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt; ≡ &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;i&gt;i&lt;/i&gt; ∈ {1, 2, …, &lt;i&gt;n&lt;/i&gt;}
&lt;/div&gt;
&lt;p&gt;不妨设&lt;/p&gt;
&lt;div alt="x = \sum_{i=1}^{n} \frac{a_i}{gcd(b_i, m_i)} k_i b_i" class="formula"&gt;
&lt;i&gt;x&lt;/i&gt; = &lt;span class="limits"&gt;&lt;sup class="limit"&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;&lt;span class="limit"&gt;&lt;span class="symbol"&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;sub class="limit"&gt;&lt;i&gt;i&lt;/i&gt; = 1&lt;/sub&gt;&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;p&gt;对于任意 &lt;span alt="j" class="formula"&gt;
&lt;i&gt;j&lt;/i&gt;&lt;/span&gt;
 ，满足 &lt;span alt="j \in \{1, 2, \ldots, n\}" class="formula"&gt;
&lt;i&gt;j&lt;/i&gt; ∈ {1, 2, …, &lt;i&gt;n&lt;/i&gt;}&lt;/span&gt;
 ，有&lt;/p&gt;
&lt;div alt="\forall ( i \in \{1, 2, \ldots, n\}, i \ne j) m_j \mid b_i" class="formula"&gt;
∀(&lt;i&gt;i&lt;/i&gt; ∈ {1, 2, …, &lt;i&gt;n&lt;/i&gt;}, &lt;i&gt;i&lt;/i&gt; ≠ &lt;i&gt;j&lt;/i&gt;)&lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;∣&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;p&gt;可得&lt;/p&gt;
&lt;div alt="m_j \mid \sum_{i \ne j} \frac{a_i}{gcd(b_i, m_i)} k_i b_i" class="formula"&gt;
&lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;∣&lt;span class="limits"&gt;&lt;sup class="limit"&gt; &lt;/sup&gt;&lt;span class="limit"&gt;&lt;span class="symbol"&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;sub class="limit"&gt;&lt;i&gt;i&lt;/i&gt; ≠ &lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;p&gt;所以&lt;/p&gt;
&lt;div alt="\begin{array}{lll} \sum_{i=1}^{n} \frac{a_i}{gcd(b_i, m_i)} k_i b_i &amp;amp; \equiv \frac{a_j}{gcd(b_j, m_j)} k_j b_j  &amp;amp; (mod\ m_j) \\ &amp;amp; \equiv \frac{a_j}{gcd(b_j, m_j)} gcd(b_j, m_j) &amp;amp; (mod\ m_j) \\ &amp;amp; \equiv a_j &amp;amp; (mod\ m_j) \end{array}" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="limits"&gt;&lt;sup class="limit"&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;&lt;span class="limit"&gt;&lt;span class="symbol"&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;sub class="limit"&gt;&lt;i&gt;i&lt;/i&gt; = 1&lt;/sub&gt;&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;)
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;a&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span alt="bi" class="formula"&gt;
&lt;i&gt;bi&lt;/i&gt;&lt;/span&gt;
 可以直接取 &lt;span alt="\prod_{j \ne i} m_j" class="formula"&gt;
&lt;span class="limits"&gt;&lt;span class="limit"&gt;&lt;span class="symbol"&gt;∏&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt; ≠ &lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;j&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;
 ，求 &lt;span alt="k_i" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;
 却比较困难。&lt;/p&gt;
&lt;p&gt;因为&lt;/p&gt;
&lt;div alt="k_i b_i\ mod\ m_i \equiv gcd(b_i, m_i) \cdot \left(k_i \frac{b_i}{gcd(b_i,m_i)}\ mod\ \frac{m_i}{gcd(b_i,m_i)}\right)" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt; ≡ &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;i&gt;mod&lt;/i&gt; &lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;所以， &lt;span alt="k_i" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;
 满足&lt;/p&gt;
&lt;div alt="k_i \frac{b_i}{gcd(b_i,m_i)} \equiv 1 \left(mod\ \frac{m_i}{gcd(b_i, m_i)}\right)" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt; ≡ 1&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;i&gt;mod&lt;/i&gt; &lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;b&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;m&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;)&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;这个问题也可以表示成，已知 &lt;span alt="a, m" class="formula"&gt;
&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;m&lt;/i&gt;&lt;/span&gt;
 ，且 &lt;span alt="gcd(a,m) = 1" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;m&lt;/i&gt;) = 1&lt;/span&gt;
 ，求 &lt;span alt="k" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;/span&gt;
 使得&lt;/p&gt;
&lt;div alt="ka \equiv 1 (mod\ m)" class="formula"&gt;
&lt;i&gt;ka&lt;/i&gt; ≡ 1(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;欧拉定理&lt;/h2&gt;
&lt;p&gt;有一种解法，不知道从哪里流传出来的，利用了欧拉定理。&lt;/p&gt;
&lt;p&gt;欧拉定理指出，若 &lt;span alt="gcd(a, m) = 1" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;m&lt;/i&gt;) = 1&lt;/span&gt;
 ，有&lt;/p&gt;
&lt;div alt="a^{\varphi(m)} \equiv 1 (mod\ m)" class="formula"&gt;
&lt;i&gt;a&lt;/i&gt;&lt;sup&gt;&lt;i&gt;φ&lt;/i&gt;(&lt;i&gt;m&lt;/i&gt;)&lt;/sup&gt; ≡ 1(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/div&gt;
&lt;p&gt;所以， &lt;span alt="k" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;/span&gt;
 取 &lt;span alt="a^{\varphi(m)-1}" class="formula"&gt;
&lt;i&gt;a&lt;/i&gt;&lt;sup&gt;&lt;i&gt;φ&lt;/i&gt;(&lt;i&gt;m&lt;/i&gt;) − 1&lt;/sup&gt;&lt;/span&gt;
 即可。&lt;/p&gt;
&lt;p&gt;因为除了量子计算机，我们并没有有效的办法能计算出 &lt;span alt="\varphi(m)" class="formula"&gt;
&lt;i&gt;φ&lt;/i&gt;(&lt;i&gt;m&lt;/i&gt;)&lt;/span&gt;
，至少古人不能使用这种方法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;大衍求一术&lt;/h2&gt;
&lt;p&gt;中国古代有一种求解的方法，叫做大衍求一术。很多介绍中国剩余定理的文章都没有提到大衍求一术。而提到大衍求一术的很多都只讲了什么是大衍求一术，而没有解释为什么。而大衍求一术乍一看完全不知道这是在算什么。&lt;/p&gt;
&lt;p&gt;数书九章中记载的大衍求一术是这样的。按如下放置四个数，不断作以下变换，直到 &lt;span alt="r1" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;1&lt;/span&gt;
 或 &lt;span alt="r2" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;2&lt;/span&gt;
 为1为止。&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} k_1 &amp;amp; r_1 \\ k_2 &amp;amp; r_2 \end{matrix}\right) \to \left\{\begin{array}{ll} \left(\begin{matrix} k_1 &amp;amp; r_1 \\ k_2+k_1 \left\lfloor\frac{r_2}{r_1}\right\rfloor &amp;amp; r_2\ mod\ r_1 \end{matrix}\right) &amp;amp; , r_1 &amp;lt; r_2 \\ \left(\begin{matrix} k_1 + k_2 \left\lfloor\frac{r_1}{r_2}\right\rfloor &amp;amp; r_1\ mod\ r_2 \\ k_2 &amp;amp; r_2 \end{matrix}\right) &amp;amp; , r_1 &amp;gt; r_2 \end{array}\right." class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎧&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎨&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;lt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="emptydot"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;一开始四个数是&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} 1 &amp;amp; a \\ 0 &amp;amp; m \end{matrix}\right)" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;m&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;很难看出，在变换过程中，这四个位置上的数始终满足&lt;/p&gt;
&lt;div alt="\left\{\begin{array}{ll} k_1 a \equiv r_1 &amp;amp; (mod\ m) \\ k_2 a \equiv -r_2 &amp;amp; (mod\ m) \end{array}\right." class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎧&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎨&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;i&gt;a&lt;/i&gt; ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;a&lt;/i&gt; ≡  − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="emptydot"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;一开始&lt;/p&gt;
&lt;div alt="\left\{\begin{array}{ll} 1 \cdot a \equiv a &amp;amp; (mod\ m) \\ 0 \cdot a \equiv 0 \equiv -m &amp;amp; (mod\ m) \end{array}\right." class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎧&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎨&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
1⋅&lt;i&gt;a&lt;/i&gt; ≡ &lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
0⋅&lt;i&gt;a&lt;/i&gt; ≡ 0 ≡  − &lt;i&gt;m&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="emptydot"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;当 &lt;span alt="r_1 &amp;lt; r_2" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;lt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;
 时，&lt;/p&gt;
&lt;div alt="\begin{array}{lll} \left(k_2 + k_1 \left\lfloor\frac{r_2}{r_1}\right\rfloor\right) \cdot a &amp;amp; \equiv - r_2 + r_1 \left\lfloor \frac{r_2}{r_1}\right\rfloor &amp;amp; (mod\ m) \\ &amp;amp; \equiv - r_2 + r_2 - r_2\ mod\ r_1 &amp;amp; (mod\ m) \\ &amp;amp; \equiv - r_2\ mod\ r_1 &amp;amp; (mod\ m) \end{array}" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡  − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; + &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡  − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; + &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡  − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;当 &lt;span alt="r_1 &amp;gt; r_2" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &amp;gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;
 时，&lt;/p&gt;
&lt;div alt="\begin{array}{lll} \left(k_1 + k_2 \left\lfloor\frac{r_1}{r_2}\right\rfloor\right) \cdot a &amp;amp; \equiv r_1 - r_2 \left\lfloor\frac{r_1}{r_2}\right\rfloor &amp;amp; (mod\ m) \\ &amp;amp; \equiv r_1 - r_1 + r_1\ mod\ r_2 &amp;amp; (mod\ m) \\ &amp;amp; \equiv r_1\ mod\ r_2 &amp;amp; (mod\ m) \end{array}" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; + &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;所以，这两个等式在变换过程中始终成立。&lt;/p&gt;
&lt;p&gt;最终，若 &lt;span alt="r_1 = 1" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = 1&lt;/span&gt;
&lt;/p&gt;
&lt;div alt="k_1 a \equiv 1 (mod\ m)" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;i&gt;a&lt;/i&gt; ≡ 1(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/div&gt;
&lt;p&gt;若 &lt;span alt="r_2 = 1" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; = 1&lt;/span&gt;
 ，作以下变换&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} k_1 &amp;amp; r_1 \\ k_2 &amp;amp; 1 \end{matrix}\right) \to \left(\begin{matrix} k_1 + k_2 (r_1 - 1) &amp;amp; 1 \\ k_2 &amp;amp; 1 \end{matrix}\right)" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; − 1)
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;此时，&lt;/p&gt;
&lt;div alt="\begin{array}{lll} (k_1 + k_2 (r_1 - 1)) \cdot a &amp;amp; \equiv r_1 - (r_1 - 1) &amp;amp; (mod\ m) \\ &amp;amp; \equiv 1 &amp;amp; (mod\ m) \end{array}" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; − 1))⋅&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; − (&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; − 1)
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ 1
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;和西方的扩展欧几里德算法相比，循环不变式差一个负号，在最后一步需要分两种情况讨论。数书九章并没有交代大衍求一术是怎么来的，可能一开始就是这样的，也可能是流传过程中减号误传成了加号，现在已无从考证了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;扩展欧几里德算法&lt;/h2&gt;
&lt;p&gt;现在用扩展欧几里德算法来求解。把循环不变式换成&lt;/p&gt;
&lt;div alt="\left\{\begin{array}{ll} k_1 a \equiv r_1 &amp;amp; (mod\ m) \\ k_2 a \equiv r_2 &amp;amp; (mod\ m) \end{array}\right." class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎧&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎨&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;i&gt;a&lt;/i&gt; ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;a&lt;/i&gt; ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="emptydot"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;变换过程换成&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} k_1 &amp;amp; r_1 \\ k_2 &amp;amp; r_2 \end{matrix}\right) \to \left(\begin{matrix} k_2 - k_1\left\lfloor\frac{r_2}{r_1}\right\rfloor &amp;amp; r_2\ mod\ r_1 \\ k_1 &amp;amp; r_1 \end{matrix}\right)" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; − &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;而初始值不变，仍然是&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} 1 &amp;amp; a \\ 0 &amp;amp; m \end{matrix}\right)" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;m&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;一开始&lt;/p&gt;
&lt;div alt="\left\{\begin{array}{ll} 1 \cdot a \equiv a &amp;amp; (mod\ m) \\ 0 \cdot a \equiv 0 \equiv m &amp;amp; (mod\ m) \end{array}\right." class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎧&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎨&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
1⋅&lt;i&gt;a&lt;/i&gt; ≡ &lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
0⋅&lt;i&gt;a&lt;/i&gt; ≡ 0 ≡ &lt;i&gt;m&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="emptydot"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;变换过程中&lt;/p&gt;
&lt;div alt="\begin{array}{lll} \left(k_2 - k_1 \left\lfloor\frac{r_2}{r_1}\right\rfloor\right) \cdot a &amp;amp; \equiv r_2 - r_1 \left\lfloor \frac{r_2}{r_1}\right\rfloor &amp;amp; (mod\ m) \\ &amp;amp; \equiv r_2 - (r_2 - r_2\ mod\ r_1) &amp;amp; (mod\ m) \\ &amp;amp; \equiv r_2\ mod\ r_1 &amp;amp; (mod\ m) \end{array}" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; − &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;span class="symbol"&gt;⌊&lt;/span&gt;&lt;span class="fraction"&gt;&lt;span class="ignored"&gt;(&lt;/span&gt;&lt;span class="numerator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)/(&lt;/span&gt;&lt;span class="denominator"&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span class="ignored"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="symbol"&gt;⌋&lt;/span&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; − (&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; − &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;)
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;所以，这两个等式在变换过程中始终成立。&lt;/p&gt;
&lt;p&gt;最终，若 &lt;span alt="r_1=1" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = 1&lt;/span&gt;
&lt;/p&gt;
&lt;div alt="k_1 a \equiv 1 (mod\ m)" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;i&gt;a&lt;/i&gt; ≡ 1(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;m&lt;/i&gt;)
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;辗转相除法&lt;/h2&gt;
&lt;p&gt;辗转相除法是一种求最大公约数的方法。西方所谓的欧几里德算法就是辗转相除法。而扩展欧几里德算法其实就是同一种算法，只不过得到了更多结果。&lt;/p&gt;
&lt;p&gt;已知 &lt;span alt="a,b" class="formula"&gt;
&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;b&lt;/i&gt;&lt;/span&gt;
 ，求 &lt;span alt="gcd(a,b)" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;b&lt;/i&gt;)&lt;/span&gt;
 。&lt;/p&gt;
&lt;p&gt;按如下放置两个数，不断作以下变换，直到 &lt;span alt="r1" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;1&lt;/span&gt;
 为0&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} r_1 \\ r_2 \end{matrix}\right) \to \left(\begin{matrix} r_2\ mod\ r_1 \\ r_1 \end{matrix}\right)" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;一开始两个数是&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} a \\ b \end{matrix}\right)" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;b&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;不妨设 &lt;span alt="r_1 = s_1 \cdot gcd(r_1, r_2),  r_2 = s_2 \cdot gcd(r1, r2)" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = &lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;⋅&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;), &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; = &lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;⋅&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;1, &lt;i&gt;r&lt;/i&gt;2)&lt;/span&gt;
 ，则&lt;/p&gt;
&lt;div alt="\begin{array}{ll} r2\ mod\ r1 &amp;amp;= (s_2 \cdot gcd(r_1, r_2))\ mod\ (s_1 \cdot gcd(r_1, r_2)) \\             &amp;amp;= (s_2\ mod\ s_1) \cdot gcd(r_1, r_2) \end{array}" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
&lt;i&gt;r&lt;/i&gt;2 &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;1
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 = (&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;⋅&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;)) &lt;i&gt;mod&lt;/i&gt; (&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;⋅&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;))
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-l"&gt;

&lt;/span&gt;
&lt;span class="arraycell align-l"&gt;
 = (&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;)⋅&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;)
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;因为 &lt;span alt="gcd(s_2\ mod\ s_1, s_1) = 1" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;) = 1&lt;/span&gt;
 ，所以&lt;/p&gt;
&lt;div alt="gcd(r_2\ mod\ r_1, r_1) = gcd(r_1, r_2)" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;) = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;)
&lt;/div&gt;
&lt;p&gt;因此， &lt;span alt="gcd(r1, r2)" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;1, &lt;i&gt;r&lt;/i&gt;2)&lt;/span&gt;
 始终是 &lt;span alt="gcd(a, b)" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;b&lt;/i&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;当 &lt;span alt="s_1=1" class="formula"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = 1&lt;/span&gt;
 时， &lt;span alt="s_2\ mod\ s_1 = 0" class="formula"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; &lt;i&gt;mod&lt;/i&gt; &lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = 0&lt;/span&gt;
 ，计算结束，得到了 &lt;span alt="gcd(a, b)" class="formula"&gt;
&lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;b&lt;/i&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;如下图所示，辗转相除法从后往前看，有 &lt;span alt="r_1 = gcd(a, b) = gcd(r_n, r_{n+1})" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;a&lt;/i&gt;, &lt;i&gt;b&lt;/i&gt;) = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;div alt="\left(\begin{matrix} a \\ b \end{matrix}\right) \to \ldots \to \left(\begin{matrix} r_4 \\ r_5 \end{matrix}\right) \to \left(\begin{matrix} r_3 \\ r_4 \end{matrix}\right) \to \left(\begin{matrix} r_2 \\ r_3 \end{matrix}\right) \to \left(\begin{matrix} r_1 \\ r_2 \end{matrix}\right) \to \left(\begin{matrix} 0 \\ r_1 \end{matrix}\right)" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;a&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;b&lt;/i&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → … → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;5&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; → &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎛&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎜&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎝&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎞&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎟&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎠&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;求解 &lt;span alt="k_1" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;
 ，使得 &lt;span alt="k_1 r_1 \equiv gcd(r_1, r_2) (mod\ r_2)" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; ≡ &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;)(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;因为 &lt;span alt="r_1 = gcd(r_1, r_2)" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;)&lt;/span&gt;
 所以 &lt;span alt="k_1 = 1" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = 1&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;求解 &lt;span alt="k_2" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;
 ，使得 &lt;span alt="k_2 r_2 \equiv gcd(r_2, r_3) (mod\ r_3)" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; ≡ &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;)(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;不妨设 &lt;span alt="r_3 - q_2 r_2 = r_1" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; = &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;因为 &lt;span alt="r_1 = gcd(r_2, r_3)" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;可得 &lt;span alt="r_3 - q_2 r_2 = gcd(r_2, r_3)" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;所以 &lt;span alt="k_2 = -q_2" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; =  − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;求解 &lt;span alt="k_3" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;&lt;/span&gt;
 ，使得 &lt;span alt="k_3 r_3 \equiv gcd(r_3, r_4) (mod\ r_3)" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; ≡ &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;)(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;不妨设 &lt;span alt="r_4 - q_3 r_3 = r_2" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; = &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;因为 &lt;span alt="r_3 - q_2 r_2 = gcd(r_3, r_4)" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;可得 &lt;span alt="r_3 - q_2(r_4 - q_3 r_3) = gcd(r_3, r_4)" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;) = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;即 &lt;span alt="r_3(1 + q_2 q_3) - q_2 r_4 = gcd(r_3, r_4)" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;(1 + &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;q&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;) − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;所以 &lt;span alt="k_3 = 1 + q_2 q_3" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; = 1 + &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;i&gt;q&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;不难看出，假设存在 &lt;span alt="k_{n+1} r_{n+1} + k_n r_{n+2} = gcd(r_{n+2}, r_{n+3})" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;不妨设 &lt;span alt="r_{n+3} - q_{n+2} r_{n+2} = r_{n+1}" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt; = &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;可得 &lt;span alt="k_{n+1}(r_{n+3} - q_{n+2} r_{n+2}) + k_n r_{n+2} = gcd(r_{n+2}, r_{n+3})" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt; − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;) + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;即 &lt;span alt="(k_n - k_{n+1} q_{n+2}) r_{n+2} + k_{n+1} r_{n+3} = gcd(r_{n+2}, r_{n+3})" class="formula"&gt;
(&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt; − &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;&lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;)&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt; + &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;所以 &lt;span alt="k_{n+2} = k_n - k_{n+1} q_{n+2}" class="formula"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt; = &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt; − &lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;&lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;即&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} k_{n+2} \\ k_{n+1} \end{matrix}\right] = \left[\begin{matrix} -q_{n+2} &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] \cdot \left[\begin{matrix} k_{n+1} \\ k_n \end{matrix}\right]" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;逐项展开后&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} k_{n+2} \\ k_{n+1} \end{matrix}\right] = \left[\begin{matrix} -q_{n+2} &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] \cdot \ldots \cdot \left[\begin{matrix} -q_3 &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] \cdot \left[\begin{matrix} -q_2 &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] \cdot \left[\begin{matrix} 1 \\ 0 \end{matrix}\right]" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅…⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;且有&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} r_{n+2} &amp;amp; r_{n+3} \end{matrix}\right] \cdot \left[\begin{matrix} k_{n+2} \\ k_{n+1} \end{matrix}\right] = gcd(r_{n+2}, r_{n+3})" class="formula"&gt;
&lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;k&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;)
&lt;/div&gt;
&lt;p&gt;观察&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} c_3 &amp;amp; c_1 \\ c_4 &amp;amp; c_2 \end{matrix}\right] \cdot \left[\begin{matrix} -q &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] = \left[\begin{matrix} -q c_3 + c_1 &amp;amp; c_3 \\ -q c_4 + c_2 &amp;amp; c_4 \end{matrix}\right]" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt; + &lt;i&gt;c&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt; + &lt;i&gt;c&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;c&lt;/i&gt;&lt;sub&gt;4&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;矩阵乘法符合结合率，不妨设&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} r_{n+2} &amp;amp; r_{n+3} \end{matrix}\right] \cdot \left[\begin{matrix} s_{m+1} &amp;amp; s_{m+2} \\ t_{m+1} &amp;amp; t_{m+2} \end{matrix}\right] = \left[\begin{matrix} r_m &amp;amp; r_{m+1} \end{matrix}\right]" class="formula"&gt;
&lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;t&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;t&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt;&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;在辗转相除法的每一步&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} r_{m+2} &amp;amp; r_{m+3} \end{matrix}\right] \cdot \left[\begin{matrix} -q_{m+2} &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] = \left[\begin{matrix} r_{m+1} &amp;amp; r_{m+2} \end{matrix}\right]" class="formula"&gt;
&lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;同时计算&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} s_{m+3} &amp;amp; s_{m+4} \end{matrix}\right] \cdot \left[\begin{matrix} -q_{m+2} &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] = \left[\begin{matrix} s_{m+2} &amp;amp; s_{m+3} \end{matrix}\right]" class="formula"&gt;
&lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 4&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;可以合并成&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} s_{m+3} &amp;amp; s_{m+4} \\ r_{m+2} &amp;amp; r_{m+3} \end{matrix}\right] \cdot \left[\begin{matrix} -q_{m+2} &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] = \left[\begin{matrix} s_{m+2} &amp;amp; s_{m+3} \\ r_{m+1} &amp;amp; r_{m+2} \end{matrix}\right]" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 4&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;补一个单位矩阵，也就是&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} r_{n+2} &amp;amp; r_{n+3} \end{matrix}\right] \cdot \left[\begin{matrix} 1 &amp;amp; 0 \\ 0 &amp;amp; 1 \end{matrix}\right] = \left[\begin{matrix} r_{n+2} &amp;amp; r_{n+3} \end{matrix}\right]" class="formula"&gt;
&lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;得到初值&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} 1 &amp;amp; 0 \\ r_{n+2} &amp;amp; r_{n+3} \end{matrix}\right]" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;连起来&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} 1 &amp;amp; 0 \\ r_{n+2} &amp;amp; r_{n+3} \end{matrix}\right] \cdot \left[\begin{matrix} -q_{n+2} &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] \cdot \ldots \cdot \left[\begin{matrix} -q_1 &amp;amp; 1 \\ 1 &amp;amp; 0 \end{matrix}\right] = \left[\begin{matrix} s_1 &amp;amp; s_2 \\ 0 &amp;amp; r_1 \end{matrix}\right]" class="formula"&gt;
&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;⋅…⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 − &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
1
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;所以 &lt;span alt="s_2" class="formula"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;&lt;/span&gt;
 就是结果&lt;/p&gt;
&lt;p&gt;更合理的思路是，把辗转相除法写成矩阵形式后，观察到&lt;/p&gt;
&lt;div alt="\left[\begin{matrix} r_{n+2} &amp;amp; r_{n+3} \end{matrix}\right] \cdot \left[\begin{matrix} s_1 &amp;amp; s_2 \\ t_1 &amp;amp; t_2 \end{matrix}\right] = \left[\begin{matrix} 0 &amp;amp; r_1 \end{matrix}\right]" class="formula"&gt;
&lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;⋅&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎡&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎢&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-left"&gt;⎣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
 
&lt;/span&gt;

&lt;/span&gt;
&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;t&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;t&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎤&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎥&lt;/span&gt;&lt;/span&gt;&lt;span class="arrayrow"&gt;&lt;span class="bracket align-right"&gt;⎦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;span class="symbol"&gt;[&lt;/span&gt;&lt;span class="array"&gt;&lt;span class="arrayrow"&gt;
&lt;span class="arraycell align-c"&gt;
0
&lt;/span&gt;
&lt;span class="arraycell align-c"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;
&lt;/span&gt;

&lt;/span&gt;
&lt;/span&gt;&lt;span class="symbol"&gt;]&lt;/span&gt;
&lt;/div&gt;
&lt;p&gt;发现 &lt;span alt="r_{n+2} s_2 \equiv r_1 \equiv gcd(r_{n+2}, r_{n+3}) (mod\ r_{n+3})" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt; ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt; ≡ &lt;i&gt;gcd&lt;/i&gt;(&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;, &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;)(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;且有循环不变式 &lt;span alt="r_{n+2} s_{m+2} \equiv r_{m+1} (mod\ r_{n+3})" class="formula"&gt;
&lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 2&lt;/sub&gt;&lt;i&gt;s&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 2&lt;/sub&gt; ≡ &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;m&lt;/i&gt; + 1&lt;/sub&gt;(&lt;i&gt;mod&lt;/i&gt; &lt;i&gt;r&lt;/i&gt;&lt;sub&gt;&lt;i&gt;n&lt;/i&gt; + 3&lt;/sub&gt;)&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;这样就得到了扩展欧几里德算法&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sun, 03 Aug 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-08-03:2014/chinese-remainder-theorem.html</guid></item><item><title>占卜的意义</title><link>https://bhuztez.github.io/2014/divination.html</link><description>&lt;p&gt;很多人都认为占卜不能预测未来，所以没什么用。还顺便把传说中周易的四大原则——不诚不测，不动不测，无事不测，重卦不测，拿出来批判一番。可是他们根本不理解占卜。占卜不是为了预测未来，毕竟没有人可以预测未来。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;占卜是为了做决定。从信息论角度看，假如你现在有两个选择，必须从中选一个，且只能选一个，而根据你目前已知的信息，并不能知道哪个选项更好，你也没有时间去收集更多信息，因为需要你立即做决定。现在你该怎么办？一个可行的办法就是抛硬币了。&lt;/p&gt;
&lt;p&gt;这么看来，那几个不测都是很有道理的。不诚不测，既然你不按抛硬币结果的做决定，那为啥抛硬币？不动不测，既然你没多种选择，那为啥抛硬币？无事不测，既然你没事需要决定，那为啥抛硬币？重卦不测，既然你抛一个硬币要返悔，那抛多少次都会返悔的，那为啥抛硬币？&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Wed, 11 Jun 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-06-11:2014/divination.html</guid></item><item><title>Heartbleed漏洞</title><link>https://bhuztez.github.io/2014/heartbleed.html</link><description>&lt;p&gt;最近爆出的&lt;a class="reference external" href="http://heartbleed.com/"&gt;Heartbleed&lt;/a&gt;漏洞实际上宣告了互联网安全已经破产了很久了。不管怎么样，还是首先提醒一下，这次的漏洞后果非常非常严重，至少应该尽快更新所有用到受影响版本的OpenSSL软件。不仅仅是服务端程序受影响，客户端程序也同样受影响，而且很多软件都选择自行编译一份OpenSSL库，所以即便使用的操作系统不受影响，自行安装的程序只要需要联网就很可能受影响。你可以检查一下软件安装目录下的文件。Windows下有libeay32.dll、ssleay32.dll或者类似名字的文件，Mac OS X下有libssl.dynlib或者类似名字的文件，Linux下有libssl.so或者类似名字的文件，非常有可能是受影响的。假如发现了这些文件，而在4月8日以后软件开发商没有发布过修补这个漏洞的新版本，请务必要第一时间联系软件开发商及时更新软件。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;这次的问题是出现在对TLS协议的heartbeat的处理上，这也是漏洞会被命名为Heartbleed的原因。我觉得TLS协议上的Heartbeat的设计也很有问题。为什么Heartbeat的payload是可变长度且可长达64K，而不是固定的长度比如64个字节？假如可变的是padding的长度而不是payload的长度，这次的漏洞根本就不会出现。同时，OpenSSL对malloc的封装把问题变得更严重了，越界读到的内存基本都在OpenSSL之前申请的范围之内，也就是都算得上是敏感内容。我感觉这里的内存分配应该把不同数据内容不同连接隔离开啊，每一片内存前后放两个内存页用来在发生越界的时候直接crash掉程序。&lt;a class="reference external" href="http://article.gmane.org/gmane.comp.encryption.openssl.user/51243"&gt;Akamai最近向OpenSSL提交了一个补丁&lt;/a&gt;，表明他们在几年前就已经应用了这样的想法，不过他们只把这种措施限制在ASN.1格式处理上了，也就是只保护了证书和私钥，其他数据还是混在一起的，&lt;a class="reference external" href="https://blogs.akamai.com/2014/04/heartbleed-update-v3.html"&gt;私钥还是有可能从中间结果泄露&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;要通过&lt;a class="reference external" href="http://blog.regehr.org/archives/1125"&gt;静态分析&lt;/a&gt;找出这个漏洞也不是不可能的。很不幸，Coverity没有发现问题，Frama-C是可以检查出问题，但是要让OpenSSL都能通过Frama-C检查也不是一件容易的事。很难想像，&lt;a class="reference external" href="http://blogs.wsj.com/digits/2014/04/11/nsa-says-it-wasnt-previously-aware-of-heartbleed/"&gt;NSA没在第一时间发现这个漏洞&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;问题出在TLS协议层，基本上就不可能从日志上查出被攻击的迹象。所以，有X.509证书的赶紧去申请个新的。公共的Wifi就不要连了。特别提醒一点，由于这一次会导致海量证书被revoke，所以浏览器一定要强制OCSP，不然被中间人用偷来的私钥攻击了，你啥也不知道。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-04-13:2014/heartbleed.html</guid></item><item><title>不动点组合子</title><link>https://bhuztez.github.io/2014/y-combinator.html</link><description>&lt;p&gt;最近有一个很奇怪的现象。也许仅仅是因为刚好有一家公司叫Y Combinator，有不少人在写博客鼓吹不动点组合子，以学会不动点组合子为荣。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;一般来说，当你发现需要用不动点组合子时，一定是哪里出了问题。比如在Erlang R17之前，你要在Erlang Shell里写递归函数，就得重新发明不动点组合子了。讨厌不动点组合子才是正常的。&lt;/p&gt;
&lt;p&gt;比如阶乘，像下面这样的代码是不行的。在定义函数时，Fact变量还没有定义。&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;Fact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Fact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;可以多接受一个参数，用来传入函数本身，在递归时再继续传下去，这样就没问题了。&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;X1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(_,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nv"&gt;Y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nv"&gt;Fact1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Y1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这已经有和不动点组合子相当的功能了。可这样的写法很别扭。当然更希望写成下面这样。&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;X2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(_,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;想要达到下面这样的效果&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;Y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;G&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;使用和上面类似的技巧，就可以了&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;Y2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;H&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;H&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;H&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nv"&gt;Fact2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Y2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;在lambda calculus里，每个函数只接受一个参数&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;X3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nv"&gt;Y3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;G&lt;/span&gt;&lt;span class="p"&gt;)))(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nv"&gt;Fact3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Y3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;X3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;你一定看出来了这个形式和Haskell Curry提出的不动点组合子并不一致。我想你也猜到为什么了。&lt;/p&gt;
&lt;p&gt;上面的写法的问题是得为不同的参数个数分别定义一个组合子。所以Erlang R17里引入了新的写法解决这个问题。&lt;/p&gt;
&lt;pre class="code erlang literal-block"&gt;
&lt;span class="nv"&gt;Fact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;F&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;终于不用再写不动点组合子了。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sat, 29 Mar 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-03-29:2014/y-combinator.html</guid></item><item><title>如何实现Prolog解释器</title><link>https://bhuztez.github.io/2014/how-to-write-a-prolog-interpreter.html</link><description>&lt;p&gt;Prolog语言本身就不太容易理解。要写个Prolog解释器就更不容易了。还好有 &lt;a class="reference external" href="http://wambook.sourceforge.net/"&gt;Warren's Abstract Machine: A Tutorial Reconstruction&lt;/a&gt; 。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;WAMBOOK里把实现Prolog的过程分成L0、L1、L2、L3四个阶段。也就是把一个困难的问题，分解成了四个比较容易的问题。这样只看slides，也是能自己写出来的，未必需要先把WAMBOOK完整看一遍。&lt;/p&gt;
&lt;p&gt;WAMBOOK有一个不好的地方是，它是按C的思路来讲的。C语言和Prolog语言的语义相差比较大，用C语言实现Prolog解释器会比较繁琐。而用Erlang就比较容易了。假如你不是很确定你是否理解了unification，不妨看看 &lt;a class="reference external" href="http://gradworks.umi.com/33/80/3380156.html"&gt;miniKanren的论文&lt;/a&gt; 。Unification以外的部分就不推荐了，毕竟现在说的是如何实现Prolog解释器，而且都是用很费解的宏写的。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sun, 23 Mar 2014 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2014-03-23:2014/how-to-write-a-prolog-interpreter.html</guid></item><item><title>比谁accept()快</title><link>https://bhuztez.github.io/2013/benchmarking-accept.html</link><description>&lt;p&gt;不知道为什么&lt;a class="reference external" href="http://avplayer.org/"&gt;国内技术第一的开源社区&lt;/a&gt;会去&lt;a class="reference external" href="http://avboost.com/t/asio/347"&gt;反驳&lt;/a&gt;一个&lt;a class="reference external" href="http://my.oschina.net/u/200693/blog/34462"&gt;很不合理的benchmark&lt;/a&gt;。那个benchmark竟然用了Erlang臭名昭著的 &lt;code&gt;io:format&lt;/code&gt; ，莫名其妙地把 &lt;code&gt;socket&lt;/code&gt; 设置成 &lt;code&gt;active&lt;/code&gt; ，还不自量力地和C++去比速度，C++代码还是Boost库文档里的&lt;a class="reference external" href="http://www.boost.org/doc/libs/1_55_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp"&gt;例子&lt;/a&gt;。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;而国内技术第一的开源社区给出的benchmark实际上就是比 &lt;code&gt;accept()&lt;/code&gt; 。所以要把 &lt;code&gt;accept&lt;/code&gt; 的 &lt;code&gt;process&lt;/code&gt; 的 &lt;code&gt;priority&lt;/code&gt; 设置成 &lt;code&gt;max&lt;/code&gt; 才行。另外，Erlang默认的port数量设得比较小，需要把 &lt;code&gt;ERL_MAX_PORTS&lt;/code&gt; 改得大一点。&lt;/p&gt;
&lt;p&gt;国内技术第一的开源社区的benchmark就一次10000个连接，结束得太快了。我又懒得改ulimit上限，同时只有4000个就只有4000个吧，总数设成80万个连接。不会C++，就用C写了&lt;a class="reference external" href="https://bhuztez.github.io/accept/client.c"&gt;个&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://bhuztez.github.io/accept/server.c"&gt;C版本&lt;/a&gt;的结果&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
real    1m34.921s
user    0m0.498s
sys     1m9.674s
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="https://bhuztez.github.io/accept/server.cpp"&gt;Boost/ASIO版本&lt;/a&gt;的结果&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
real    1m34.972s
user    0m0.495s
sys     1m10.013s
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="https://bhuztez.github.io/accept/server.erl"&gt;Erlang版本&lt;/a&gt;的结果&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
real    1m39.437s
user    0m0.520s
sys     1m11.655s
&lt;/pre&gt;
&lt;p&gt;可以看到，区区80万个连接，Erlang就比C++慢了5秒。对于每天HTTP请求数动辄上十亿的巨型网站来说，每80亿个连接，Erlang仅 &lt;code&gt;accept()&lt;/code&gt; 就会比C++多花5万秒啊，一天也就8万多秒，哪里还有时间来运行业务逻辑啊。&lt;/p&gt;
&lt;p&gt;整天摆弄micro benchmark，不去探索不去尝试的弊病，Rob Pike早就&lt;a class="reference external" href="http://doc.cat-v.org/bell_labs/utah2000/"&gt;吐槽&lt;/a&gt;过了。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sat, 23 Nov 2013 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2013-11-23:2013/benchmarking-accept.html</guid></item><item><title>用gcj编译SWT程序</title><link>https://bhuztez.github.io/2013/compiling-swt-application-with-gcj.html</link><description>&lt;p&gt;很久之前编译成功过一次，忘了记下编译用的参数，之后就再也想不起来了。现在重新编译一次，把用到的参数记录一下。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;gcj可以把Java程序编译成本地指令集。比如下面这个程序， &lt;code&gt;gcj -s -o SwingHelloWorld --main=SwingHelloWorld -Os SwingHelloWorld.java&lt;/code&gt; 就可以了。运行再关掉，可以明显的感觉到比用JVM快了一点。&lt;/p&gt;
&lt;pre class="code java literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.FlowLayout&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.JFrame&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.JLabel&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.swing.WindowConstants&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SwingHelloWorld&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;JFrame&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JFrame&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setLayout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FlowLayout&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;JLabel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pack&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setDefaultCloseOperation&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WindowConstants&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DISPOSE_ON_CLOSE&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setVisible&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;SWT程序的编译过程略有不同，以下面这个程序为例&lt;/p&gt;
&lt;pre class="code java literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.eclipse.swt.SWT&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.eclipse.swt.widgets.Display&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.eclipse.swt.widgets.Shell&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.eclipse.swt.widgets.Label&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SWTHelloWorld&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Display&lt;/span&gt; &lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Display&lt;/span&gt; &lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;Shell&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Shell&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;Label&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SWT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CENTER&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pack&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pack&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;open&lt;/span&gt; &lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isDisposed&lt;/span&gt; &lt;span class="o"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readAndDispatch&lt;/span&gt; &lt;span class="o"&gt;())&lt;/span&gt;
                &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sleep&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt; &lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;需要先编译一下 &lt;code&gt;swt.jar&lt;/code&gt; ，值得注意的是要加上 &lt;code&gt;-fjni&lt;/code&gt; 参数&lt;/p&gt;
&lt;pre class="code text literal-block"&gt;
gcj -s -Os -shared -fjni -fPIC -o libswt.so /usr/lib64/java/swt.jar
gcj -s -Os --classpath=/usr/lib64/java/swt.jar -o SWTHelloWorld --main=SWTHelloWorld SWTHelloWorld.java -lswt -L.
LD_LIBRARY_PATH=. ./SWTHelloWorld
&lt;/pre&gt;
&lt;p&gt;也可以静态链接 &lt;code&gt;swt.jar&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code text literal-block"&gt;
gcj -Os -c -fjni -o swt.o /usr/lib64/java/swt.jar
gcj -s -o SWTHelloWorld -Os --classpath=/usr/lib64/java/swt.jar --main=SWTHelloWorld SWTHelloWorld.java swt.o
./SWTHelloWorld
&lt;/pre&gt;
&lt;p&gt;要在 &lt;code&gt;gij&lt;/code&gt; 里用上编译过的swt，编译swt时需要加上 &lt;code&gt;-findirect-dispatch -Wl,-Bsymbolic&lt;/code&gt; 。运行 &lt;code&gt;gij&lt;/code&gt; 时加上 &lt;code&gt;-verbose:class&lt;/code&gt; 可以检查是否用上了编译好的swt。参考 &lt;a class="reference external" href="http://gcc.gnu.org/wiki/How_to_BC_compile_with_GCJ"&gt;How to BC compile with GCJ&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code text literal-block"&gt;
gcj -s -Os -shared -fjni -fPIC -findirect-dispatch -Wl,-Bsymbolic -o libswt.so /usr/lib64/java/swt.jar

gcj-dbtool -n swt.db
gcj-dbtool -a swt.db /usr/lib64/java/swt.jar libswt.so
gij -verbose:class --cp .:/usr/lib64/java/swt.jar SWTHelloWorld
gij -verbose:class --cp .:/usr/lib64/java/swt.jar -Dgnu.gcj.precompiled.db.path=swt.db SWTHelloWorld
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Wed, 02 Jan 2013 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2013-01-02:2013/compiling-swt-application-with-gcj.html</guid></item><item><title>DNS基本配置</title><link>https://bhuztez.github.io/2012/dns.html</link><description>&lt;p&gt;因为DNSSEC和SSHFP配置步骤还是有点多的，在这里记录一下&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div class="section" id="dns-server"&gt;
&lt;h2&gt;运行一个临时的DNS Server&lt;/h2&gt;
&lt;p&gt;在配置文件里把文件/目录地址改到当前目录下。BIND 9.7多了一个 session-keyfile &lt;a class="footnote-reference" href="#bind97-session-key" id="id1"&gt;[1]&lt;/a&gt; 。&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="bind97-session-key" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.isc.org/software/bind/new-features/9.7"&gt;New Features in BIND 9.7&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env bash
&lt;/span&gt;
&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/keys&amp;quot;&lt;/span&gt;
mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/zones&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! -e &lt;span class="s2"&gt;&amp;quot;named.conf&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;

cat &amp;gt;&lt;span class="s2"&gt;&amp;quot;named.conf&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
options {
        listen-on               port 8053       { 127.0.0.1; };
        directory               &amp;quot;${ROOT}/zones&amp;quot;;
        pid-file                &amp;quot;${ROOT}/named.pid&amp;quot;;
        session-keyfile         &amp;quot;${ROOT}/session.key&amp;quot;;
        managed-keys-directory  &amp;quot;${ROOT}/keys&amp;quot;;

        allow-query             { 127.0.0.1; };
        recursion               no;
};

controls {};
EOF&lt;/span&gt;

&lt;span class="k"&gt;fi&lt;/span&gt;

named -c named.conf -g
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="zone"&gt;
&lt;h2&gt;添加一个zone&lt;/h2&gt;
&lt;p&gt;修改 &lt;code&gt;named.conf&lt;/code&gt; ，添加一个zone。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
zone &amp;quot;example.com.&amp;quot; {
        type    master;
        file    &amp;quot;example.com&amp;quot;;
};
&lt;/pre&gt;
&lt;p&gt;在 &lt;code&gt;zones&lt;/code&gt; 目录下，新建 &lt;code&gt;example.com&lt;/code&gt; 文件&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
$ORIGIN .
$TTL 300
example.com         IN SOA  example.com. root.example.com. (
                            201208061  ; serial
                            300        ; refresh
                            300        ; retry
                            300        ; expire
                            300        ; minimum
                            )
                    NS      ns.example.com.
                    A       127.0.0.1
ns.example.com.             A       127.0.0.1
&lt;/pre&gt;
&lt;p&gt;使用 &lt;code&gt;dig&lt;/code&gt; 来查询&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dig -p &lt;span class="m"&gt;8053&lt;/span&gt; &amp;#64;127.0.0.1 example.com
&lt;span class="go"&gt;
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2-RedHat-9.8.2-1.fc16 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -p 8053 &amp;#64;127.0.0.1 example.com
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 2269
;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 1
;; WARNING: recursion requested but not available

;; QUESTION SECTION:
;example.com.                   IN      A

;; ANSWER SECTION:
example.com.            300     IN      A       127.0.0.1

;; AUTHORITY SECTION:
example.com.            300     IN      NS      ns.example.com.

;; ADDITIONAL SECTION:
ns.example.com.         300     IN      A       127.0.0.1

;; Query time: 1 msec
;; SERVER: 127.0.0.1#8053(127.0.0.1)
;; WHEN: Mon Aug  6 16:35:14 2012
;; MSG SIZE  rcvd: 78&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;修改DNS记录&lt;/h2&gt;
&lt;p&gt;修改 &lt;code&gt;zone&lt;/code&gt; 的设置，添加 &lt;code&gt;allow-update&lt;/code&gt; 。因为BIND 9.7开始，BIND启动的时候会临时生成一个可以用来update的key。就先用这个key来操作好了。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
zone &amp;quot;example.com.&amp;quot; {
        type            master;
        file            &amp;quot;example.com&amp;quot;;

        allow-update    { key local-ddns; };
};
&lt;/pre&gt;
&lt;p&gt;用 &lt;code&gt;nsupdate&lt;/code&gt; 添加一条记录&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; nsupdate -k session.key
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; server localhost 8053
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; update add www.example.com. &lt;span class="m"&gt;300&lt;/span&gt; A 127.0.0.1
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; send
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; quit
&lt;span class="gp"&gt;$&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;用 &lt;code&gt;dig&lt;/code&gt; 查询结果&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dig -p &lt;span class="m"&gt;8053&lt;/span&gt; &amp;#64;127.0.0.1 www.example.com
&lt;span class="go"&gt;
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2-RedHat-9.8.2-1.fc16 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -p 8053 &amp;#64;127.0.0.1 www.example.com
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 40774
;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 1
;; WARNING: recursion requested but not available

;; QUESTION SECTION:
;www.example.com.               IN      A

;; ANSWER SECTION:
www.example.com.        300     IN      A       127.0.0.1

;; AUTHORITY SECTION:
example.com.            300     IN      NS      ns.example.com.

;; ADDITIONAL SECTION:
ns.example.com.         300     IN      A       127.0.0.1

;; Query time: 2 msec
;; SERVER: 127.0.0.1#8053(127.0.0.1)
;; WHEN: Mon Aug  6 16:47:02 2012
;; MSG SIZE  rcvd: 82&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;删除一条记录可以用&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
update delete www.example.com. 300 A 127.0.0.1
&lt;/pre&gt;
&lt;p&gt;要一次删除 &lt;code&gt;www.example.com.&lt;/code&gt; 所有A记录，用&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
update delete www.example.com. A
&lt;/pre&gt;
&lt;p&gt;生成修改记录用的key&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dnssec-keygen -T KEY -a HMAC-SHA512 -b &lt;span class="m"&gt;512&lt;/span&gt; -n USER user
&lt;span class="go"&gt;Kuser.+165+40835
&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat Kuser.+165+40835.key
&lt;span class="go"&gt;user. IN KEY 0 3 165 C25Jqxj2ZY8m18yaANh9FpvKhHPXksoOtlOH8XemcV4YB4JSfmbqEmbf lpZIBgeTHqPkMNv08jbyluawecL5yA==
&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat Kuser.+165+40835.private
&lt;span class="go"&gt;Private-key-format: v1.3
Algorithm: 165 (HMAC_SHA512)
Key: C25Jqxj2ZY8m18yaANh9FpvKhHPXksoOtlOH8XemcV4YB4JSfmbqEmbflpZIBgeTHqPkMNv08jbyluawecL5yA==
Bits: AAA=
Created: 20120807063255
Publish: 20120807063255
Activate: 20120807063255&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;修改 &lt;code&gt;named.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
key &amp;quot;user.&amp;quot; {
        algorithm       HMAC-SHA512;
        secret          &amp;quot;C25Jqxj2ZY8m18yaANh9FpvKhHPXksoOtlOH8XemcV4YB4JSfmbqEmbflpZIBgeTHqPkMNv08jbyluawecL5yA==&amp;quot;;
};

zone &amp;quot;example.com.&amp;quot; {
        type            master;
        file            &amp;quot;example.com&amp;quot;;

        allow-update    { key user.; };
};
&lt;/pre&gt;
&lt;p&gt;此时用 &lt;code&gt;nsupdate -k Kuser.+165+40835.private&lt;/code&gt; 就可以修改DNS记录了&lt;/p&gt;
&lt;div class="section" id="python"&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;p&gt;可以用 &lt;a class="reference external" href="http://www.dnspython.org/"&gt;dnspython&lt;/a&gt; 来修改DNS记录&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dns.query&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dns.tsig&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dns.tsigkeyring&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dns.update&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dns.rdatatype&lt;/span&gt;

&lt;span class="n"&gt;keyring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tsigkeyring&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_text&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s1"&gt;'user.'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C25Jqxj2ZY8m18yaANh9FpvKhHPXksoOtlOH8XemcV4YB4JSfmbqEmbflpZIBgeTHqPkMNv08jbyluawecL5yA==&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'example.com.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;keyring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keyring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;keyalgorithm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tsig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HMAC_SHA512&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'www'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rdatatype&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'127.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'127.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8053&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;运行&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; python dnsupdate.py
&lt;span class="go"&gt;id 49584
opcode UPDATE
rcode NOERROR
flags QR
;ZONE
example.com. IN SOA
;PREREQ
;UPDATE
;ADDITIONAL&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="java"&gt;
&lt;h3&gt;Java&lt;/h3&gt;
&lt;p&gt;可以用 &lt;a class="reference external" href="http://www.dnsjava.org/"&gt;dnsjava&lt;/a&gt; 来修改DNS记录&lt;/p&gt;
&lt;pre class="code java literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.xbill.DNS.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DNSUpdate&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;xbill&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DNS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TextParseException&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;IOException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="n"&gt;zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;example.com.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Update&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Update&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zone&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fromString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;www&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zone&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;TSIG&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;TSIG&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;TSIG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;HMAC_SHA512&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;quot;user.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;quot;C25Jqxj2ZY8m18yaANh9FpvKhHPXksoOtlOH8XemcV4YB4JSfmbqEmbflpZIBgeTHqPkMNv08jbyluawecL5yA==&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;A&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;Resolver&lt;/span&gt; &lt;span class="n"&gt;resolver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleResolver&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;resolver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setTCP&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;resolver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setPort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8053&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;resolver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setTSIGKey&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;Message&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resolver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;};&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;编译运行&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; javac -cp dnsjava-2.1.3.jar DNSUpdate.java
&lt;span class="gp"&gt;$&lt;/span&gt; java -cp .:dnsjava-2.1.3.jar DNSUpdate
&lt;span class="go"&gt;;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: UPDATE, status: NOERROR, id: 54821
;; flags: qr ; qd: 1 an: 0 au: 0 ad: 1
;; TSIG ok
;; ZONE:
;;      example.com., type = SOA, class = IN

;; PREREQUISITES:

;; UPDATE RECORDS:

;; ADDITIONAL RECORDS:
user.                   0       ANY     TSIG    hmac-sha512. 1344326060 300 64 YmqR2FI00zkP+K8oikeip7QM+QSZgAJg/b+vCCFi18AFFarRdOrkNSRNouPMGec9qUko0Gf6AywU2W7YXsKUtA== NOERROR 0

;; Message size: 138 bytes&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="master-slave"&gt;
&lt;h2&gt;Master/Slave&lt;/h2&gt;
&lt;p&gt;修改zone的设置，添加 &lt;code&gt;allow-transfer&lt;/code&gt; 和 &lt;code&gt;also-notify&lt;/code&gt; 。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
zone &amp;quot;example.com.&amp;quot; {
        type            master;
        file            &amp;quot;example.com&amp;quot;;

        allow-update    { key local-ddns; };
        allow-transfer  { 127.0.0.1; };
        also-notify     { 127.0.0.1 port 8153; };
};
&lt;/pre&gt;
&lt;p&gt;slave的配置，只要把zone的 &lt;code&gt;masters&lt;/code&gt; 设置好就可以了。&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env bash
&lt;/span&gt;
&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/slave-keys&amp;quot;&lt;/span&gt;
mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/slave-zones&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! -e &lt;span class="s2"&gt;&amp;quot;slave.conf&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;

cat &amp;gt;&lt;span class="s2"&gt;&amp;quot;slave.conf&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
options {
        listen-on               port 8153       { 127.0.0.1; };
        directory               &amp;quot;${ROOT}/slave-zones&amp;quot;;
        pid-file                &amp;quot;${ROOT}/slave.pid&amp;quot;;
        session-keyfile         &amp;quot;${ROOT}/slave.session.key&amp;quot;;
        managed-keys-directory  &amp;quot;${ROOT}/slave-keys&amp;quot;;

        allow-query             { 127.0.0.1; };
        recursion               no;
};

controls {};

zone &amp;quot;example.com.&amp;quot; {
        type    slave;
        masters { 127.0.0.1 port 8053; };
};
EOF&lt;/span&gt;

&lt;span class="k"&gt;fi&lt;/span&gt;

named -c slave.conf -g
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="dnssec"&gt;
&lt;h2&gt;DNSSEC&lt;/h2&gt;
&lt;p&gt;在zones目录下，生成ZSK&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dnssec-keygen -a rsasha512 -b &lt;span class="m"&gt;1024&lt;/span&gt; -n ZONE example.com.
&lt;span class="go"&gt;Generating key pair......................++++++ ...............++++++
Kexample.com.+010+41861&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;生成KSK&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dnssec-keygen -a rsasha512 -b &lt;span class="m"&gt;1024&lt;/span&gt; -n ZONE -f KSK example.com.
&lt;span class="go"&gt;Generating key pair.........................++++++ .....................................++++++
Kexample.com.+010+49764&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;修改 &lt;code&gt;example.com&lt;/code&gt; ，在最后添加两行&lt;/p&gt;
&lt;pre class="code text literal-block"&gt;
$INCLUDE &amp;quot;Kexample.com.+010+41861.key&amp;quot;
$INCLUDE &amp;quot;Kexample.com.+010+49764.key&amp;quot;
&lt;/pre&gt;
&lt;p&gt;签名zone&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dnssec-signzone example.com
&lt;span class="go"&gt;Verifying the zone using the following algorithms: RSASHA512.
Zone signing complete:
Algorithm: RSASHA512: KSKs: 1 active, 0 stand-by, 0 revoked
                      ZSKs: 1 active, 0 stand-by, 0 revoked
example.com.signed&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;修改 &lt;code&gt;named.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
zone &amp;quot;example.com.&amp;quot; {
        type            master;
        file            &amp;quot;example.com.signed&amp;quot;;
};
&lt;/pre&gt;
&lt;p&gt;在options加上&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
dnssec-enable           yes;
&lt;/pre&gt;
&lt;p&gt;启动bind，查看DNSKEY&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dig -p &lt;span class="m"&gt;8053&lt;/span&gt; &amp;#64;localhost  +multi +noall +answer DNSKEY example.com.
&lt;span class="go"&gt;example.com.            300 IN DNSKEY 256 3 10 (
                                AwEAAbexLhdu6Fk91XVCZlXPuJUD4BfigFUFhEkijwrF
                                CF6KCAuixIt4tob2l4yTw/txAbGuzNz5t4oI/GUifniJ
                                oQO5WLn18YnhPtQ/TLgyDfTB01IAqK1AMNJ4bHINEn4V
                                gh3q4V41xgh8GMdYN5LsD5qUKUpoy8hMLRSGSK6VVr6v
                                ) ; key id = 41861
example.com.            300 IN DNSKEY 257 3 10 (
                                AwEAAboBxp1wNbmxhINtxORCNfwQQaZ3QlTtlxfV+jCR
                                Y5R44ri1ygI5kZEToqiB7W6nnxbUi9T5HRGmJmprl7Qa
                                pEzw4S8YaUXCdYAPy8tNFHMSsrj2d72r2gR2DSBp4C5Z
                                D5XGdk9kV6GSbCl0DMd0nzabSLMVw/A8N7l9cVU+MVez
                                ) ; key id = 49764&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;建立 &lt;code&gt;trusted-key.key&lt;/code&gt; 文件&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
example.com.            300 IN DNSKEY 257 3 10 AwEAAboBxp1wNbmxhINtxORCNfwQQaZ3QlTtlxfV+jCRY5R44ri1ygI5kZEToqiB7W6nnxbUi9T5HRGmJmprl7QapEzw4S8YaUXCdYAPy8tNFHMSsrj2d72r2gR2DSBp4C5ZD5XGdk9kV6GSbCl0DMd0nzabSLMVw/A8N7l9cVU+MVez
&lt;/pre&gt;
&lt;p&gt;用 &lt;code&gt;dig&lt;/code&gt; 来验证&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dig -p &lt;span class="m"&gt;8053&lt;/span&gt; &amp;#64;localhost A example.com. +sigchase +trusted-key&lt;span class="o"&gt;=&lt;/span&gt;trusted-key.key
&lt;span class="go"&gt;;; RRset to chase:
example.com.            300     IN      A       127.0.0.1


;; RRSIG of the RRset to chase:
example.com.            300     IN      RRSIG   A 10 2 300 20120909052125 20120810052125 41861 example.com. A5raSwawZlfWejUvvWG+DYTiAMhbWyTXyScEYNxJxSyOrzZGLD4gGlFI RGmt91nmyw2+f2sHHqlRtvEmcxzFydTwZJs0lTdkQ3PODov4btEah52N aJGADObHaIAqZYcvYPlIpDDcZNIDQxbJbQyI6+JmWoFJN4QwyqXLn9dr LTU=



Launch a query to find a RRset of type DNSKEY for zone: example.com.

;; DNSKEYset that signs the RRset to chase:
example.com.            300     IN      DNSKEY  256 3 10 AwEAAbexLhdu6Fk91XVCZlXPuJUD4BfigFUFhEkijwrFCF6KCAuixIt4 tob2l4yTw/txAbGuzNz5t4oI/GUifniJoQO5WLn18YnhPtQ/TLgyDfTB 01IAqK1AMNJ4bHINEn4Vgh3q4V41xgh8GMdYN5LsD5qUKUpoy8hMLRSG SK6VVr6v
example.com.            300     IN      DNSKEY  257 3 10 AwEAAboBxp1wNbmxhINtxORCNfwQQaZ3QlTtlxfV+jCRY5R44ri1ygI5 kZEToqiB7W6nnxbUi9T5HRGmJmprl7QapEzw4S8YaUXCdYAPy8tNFHMS srj2d72r2gR2DSBp4C5ZD5XGdk9kV6GSbCl0DMd0nzabSLMVw/A8N7l9 cVU+MVez


;; RRSIG of the DNSKEYset that signs the RRset to chase:
example.com.            300     IN      RRSIG   DNSKEY 10 2 300 20120909052125 20120810052125 41861 example.com. KEAnlTPJsxS1lg4vJv3MdblH9LgPq5Mcv5uxhjnujHiyJkPw9kl57lcp GyFOZcWcE226fBoM+YkzHhziiPmTnjxZBWK9unnsyBgfsGy+t6YlvorQ XB60O0AAgrbDouWg9HO3wpYjILXK37w/J+MkCYXPpj1o5+OU5Adtl/LK HJQ=
example.com.            300     IN      RRSIG   DNSKEY 10 2 300 20120909052125 20120810052125 49764 example.com. V1fqbwK/USLsnHN2Q6tgN4mFMZtaEjtbhkSzUCPDq6TFsOEClHF09Do7 0mEDQCqW+r1DljpAPVzHBHzzKz5DAMLApn+qVeE+NaD0/WvMeh5nyvMQ 8jQ0102M7i9bVuRvnfSKRU74UxWD71Py6AS6wyg26KBgP9RIs4f5UEeN lPc=



Launch a query to find a RRset of type DS for zone: example.com.
;; NO ANSWERS: no more

;; WARNING There is no DS for the zone: example.com.



;; WE HAVE MATERIAL, WE NOW DO VALIDATION
;; VERIFYING A RRset for example.com. with DNSKEY:41861: success
;; OK We found DNSKEY (or more) to validate the RRset
;; Ok, find a Trusted Key in the DNSKEY RRset: 49764
;; VERIFYING DNSKEY RRset for example.com. with DNSKEY:49764: success

;; Ok this DNSKEY is a Trusted Key, DNSSEC validation is ok: SUCCESS&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="recursive-resolver"&gt;
&lt;h2&gt;recursive resolver&lt;/h2&gt;
&lt;p&gt;建立 &lt;code&gt;trusted-keys&lt;/code&gt; 文件&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
trusted-keys {
example.com.            257 3 10 &amp;quot;AwEAAboBxp1wNbmxhINtxORCNfwQQaZ3QlTtlxfV+jCRY5R44ri1ygI5kZEToqiB7W6nnxbUi9T5HRGmJmprl7QapEzw4S8YaUXCdYAPy8tNFHMSsrj2d72r2gR2DSBp4C5ZD5XGdk9kV6GSbCl0DMd0nzabSLMVw/A8N7l9cVU+MVez&amp;quot;;
};
&lt;/pre&gt;
&lt;div class="section" id="bind"&gt;
&lt;h3&gt;bind&lt;/h3&gt;
&lt;p&gt;启动bind作为recursive resolver&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env bash
&lt;/span&gt;
&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/recursive-keys&amp;quot;&lt;/span&gt;
mkdir -p &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/recursive-zones&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! -e &lt;span class="s2"&gt;&amp;quot;recursive.conf&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;

cat &amp;gt;&lt;span class="s2"&gt;&amp;quot;recursive.conf&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
options {
        listen-on               port 8253       { 127.0.0.1; };
        directory               &amp;quot;${ROOT}/recursive-zones&amp;quot;;
        pid-file                &amp;quot;${ROOT}/recursive.pid&amp;quot;;
        session-keyfile         &amp;quot;${ROOT}/recursive.session.key&amp;quot;;
        managed-keys-directory  &amp;quot;${ROOT}/recursive-keys&amp;quot;;

        allow-query             { 127.0.0.1; };
        recursion               yes;
        dnssec-validation       yes;
        forwarders { 127.0.0.1 port 8053; };
};

controls {};

include &amp;quot;${ROOT}/trusted-keys&amp;quot;;
EOF&lt;/span&gt;

&lt;span class="k"&gt;fi&lt;/span&gt;

named -c recursive.conf -g
&lt;/pre&gt;
&lt;p&gt;使用 &lt;code&gt;dig&lt;/code&gt; 查看结果&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dig -p &lt;span class="m"&gt;8253&lt;/span&gt; &amp;#64;localhost example.com. +dnssec
&lt;span class="go"&gt;
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2-RedHat-9.8.2-1.fc16 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -p 8253 &amp;#64;localhost example.com. +dnssec
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 29620
;; flags: qr rd ra ad; QUERY: 1, ANSWER: 2, AUTHORITY: 2, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags: do; udp: 4096
;; QUESTION SECTION:
;example.com.                   IN      A

;; ANSWER SECTION:
example.com.            78      IN      A       127.0.0.1
example.com.            78      IN      RRSIG   A 10 2 300 20120909052125 20120810052125 41861 example.com. A5raSwawZlfWejUvvWG+DYTiAMhbWyTXyScEYNxJxSyOrzZGLD4gGlFI RGmt91nmyw2+f2sHHqlRtvEmcxzFydTwZJs0lTdkQ3PODov4btEah52N aJGADObHaIAqZYcvYPlIpDDcZNIDQxbJbQyI6+JmWoFJN4QwyqXLn9dr LTU=

;; AUTHORITY SECTION:
example.com.            78      IN      NS      ns.example.com.
example.com.            78      IN      RRSIG   NS 10 2 300 20120909052125 20120810052125 41861 example.com. JMTkJtNQ75fRhHY+QgMqkVChHKAOiV+tnG3YiEKEBVmgBoslNaCdTFvw PJXfxCh776Nl+o5xbNkA6nZNcAA6UlM8/v9piK5+K1as7n5MJTiIDacC KiHYIwZvBrs8F3OVybXV+rTshFz4t19NNx8snJD9yP+UJLjmxV3Ej0OP QKo=

;; Query time: 1 msec
;; SERVER: 127.0.0.1#8253(127.0.0.1)
;; WHEN: Fri Aug 10 15:39:16 2012
;; MSG SIZE  rcvd: 415&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="unbound"&gt;
&lt;h3&gt;unbound&lt;/h3&gt;
&lt;p&gt;启动unbound作为recursive resolver&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env bash
&lt;/span&gt;
&lt;span class="nv"&gt;ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! -e &lt;span class="s2"&gt;&amp;quot;unbound.conf&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;

cat &amp;gt;&lt;span class="s2"&gt;&amp;quot;unbound.conf&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF
server:
    num-threads: 1
    port: 8353
    directory: &amp;quot;${ROOT}&amp;quot;
    trusted-keys-file: &amp;quot;${ROOT}/trusted-keys&amp;quot;
    pidfile: &amp;quot;${ROOT}/unbound.pid&amp;quot;
    verbosity: 1
    use-syslog: no
    do-daemonize: no
    username: &amp;quot;$(whoami)&amp;quot;
    do-not-query-localhost: no


forward-zone:
    name: &amp;quot;example.com.&amp;quot;
    forward-addr: 127.0.0.1&amp;#64;8053
EOF&lt;/span&gt;

&lt;span class="k"&gt;fi&lt;/span&gt;

unbound -c unbound.conf
&lt;/pre&gt;
&lt;p&gt;使用 &lt;code&gt;dig&lt;/code&gt; 查看结果&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; dig -p &lt;span class="m"&gt;8353&lt;/span&gt; &amp;#64;localhost example.com. +dnssec
&lt;span class="go"&gt;
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2-RedHat-9.8.2-1.fc16 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -p 8353 &amp;#64;localhost example.com. +dnssec
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 28672
;; flags: qr rd ra ad; QUERY: 1, ANSWER: 2, AUTHORITY: 2, ADDITIONAL: 3

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags: do; udp: 4096
;; QUESTION SECTION:
;example.com.                   IN      A

;; ANSWER SECTION:
example.com.            300     IN      A       127.0.0.1
example.com.            300     IN      RRSIG   A 10 2 300 20120909052125 20120810052125 41861 example.com. A5raSwawZlfWejUvvWG+DYTiAMhbWyTXyScEYNxJxSyOrzZGLD4gGlFI RGmt91nmyw2+f2sHHqlRtvEmcxzFydTwZJs0lTdkQ3PODov4btEah52N aJGADObHaIAqZYcvYPlIpDDcZNIDQxbJbQyI6+JmWoFJN4QwyqXLn9dr LTU=

;; AUTHORITY SECTION:
example.com.            300     IN      NS      ns.example.com.
example.com.            300     IN      RRSIG   NS 10 2 300 20120909052125 20120810052125 41861 example.com. JMTkJtNQ75fRhHY+QgMqkVChHKAOiV+tnG3YiEKEBVmgBoslNaCdTFvw PJXfxCh776Nl+o5xbNkA6nZNcAA6UlM8/v9piK5+K1as7n5MJTiIDacC KiHYIwZvBrs8F3OVybXV+rTshFz4t19NNx8snJD9yP+UJLjmxV3Ej0OP QKo=

;; ADDITIONAL SECTION:
ns.example.com.         300     IN      A       127.0.0.1
ns.example.com.         300     IN      RRSIG   A 10 3 300 20120909052125 20120810052125 41861 example.com. MgDjvx9Xmfg/p872Im2QhRgehKZi8yKr8E8dfueT+uhfp5KCx0g6pIX4 5VLJO/lYmdaG+vRQyj0FLTLntDIM9G/5rlKp9CISH4yD6nsyfQI63FM1 lwDM29fytCilHXvgWb64jbGf/lHxuKsaZjsvaJyRZeWyEzpFKNq8BB5v RHI=

;; Query time: 1 msec
;; SERVER: 127.0.0.1#8353(127.0.0.1)
;; WHEN: Fri Aug 10 15:48:40 2012
;; MSG SIZE  rcvd: 602&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sshfp"&gt;
&lt;h2&gt;SSHFP&lt;/h2&gt;
&lt;p&gt;生成SSH密钥对&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ssh-keygen -q -N &lt;span class="s1"&gt;''&lt;/span&gt; -f id_rsa
&lt;/pre&gt;
&lt;p&gt;转换成SSHFP记录，并把这行添加到 &lt;code&gt;zones/example.com&lt;/code&gt; 里&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ssh-keygen -r example.com. -f id_rsa.pub
&lt;span class="go"&gt;example.com. IN SSHFP 1 1 5727cac5dcca0d87c2b74f33e6e6106f09a03d27&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;SSH客户端使用的 &lt;code&gt;config&lt;/code&gt; 文件&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
Host example.com
    Port 8022
    VerifyHostKeyDNS yes
    StrictHostKeyChecking ask
&lt;/pre&gt;
&lt;p&gt;运行一个临时的SSH Server&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env python2&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;twisted.python&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startLogging&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;twisted.internet&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reactor&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;twisted.conch.ssh&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;twisted.conch.ssh&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;

&lt;span class="n"&gt;SSHD_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'id_rsa'&lt;/span&gt;

&lt;span class="n"&gt;PUBLIC_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SSHD_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;PRIVATE_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SSHD_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;SSH_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PUBLIC_KEY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sshType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;FINGERPRINT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PUBLIC_KEY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fingerprint&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SSHFactory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSHFactory&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;publicKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;SSH_TYPE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PUBLIC_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;privateKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;SSH_TYPE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PRIVATE_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listenTCP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8022&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SSHFactory&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;劫持SSH客户端的DNS请求，将其发往8253端口&lt;/p&gt;
&lt;pre class="code c literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;netdb.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#define __USE_GNU
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;dlfcn.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;in_port_t&lt;/span&gt; &lt;span class="n"&gt;sendto_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;in_addr_t&lt;/span&gt; &lt;span class="n"&gt;sendto_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;INADDR_NONE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;socklen_t&lt;/span&gt; &lt;span class="n"&gt;addrlen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_connect&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;socklen_t&lt;/span&gt; &lt;span class="n"&gt;addrlen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_connect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;_connect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dlsym&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RTLD_NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;connect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addr_in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ntohs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addr_in&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addrlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;new_addr_in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;addr_in&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8253&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htonl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INADDR_LOOPBACK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_zero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="n"&gt;sendto_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;addr_in&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;sendto_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;addr_in&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;new_addr_in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_addr_in&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;ssize_t&lt;/span&gt; &lt;span class="nf"&gt;recvfrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;src_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;socklen_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addrlen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;ssize_t&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_recvfrom&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;src_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;socklen_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addrlen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_recvfrom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;_recvfrom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dlsym&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RTLD_NEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;recvfrom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kt"&gt;ssize_t&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_recvfrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;src_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addrlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;src_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sendto_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;src_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sendto_port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;编译，通过 &lt;code&gt;LD_PRELOAD&lt;/code&gt; 运行SSH客户端&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;LD_PRELOAD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/hook.so&amp;quot;&lt;/span&gt; ssh -v -i id_rsa -F config example.com
&lt;span class="go"&gt;OpenSSH_5.8p2, OpenSSL 1.0.0i-fips 19 Apr 2012
debug1: Reading configuration data config
debug1: Applying options for example.com
debug1: Connecting to example.com [127.0.0.1] port 8022.
debug1: Connection established.
debug1: identity file id_rsa type 1
debug1: identity file id_rsa-cert type -1
debug1: Remote protocol version 2.0, remote software version Twisted
debug1: no match: Twisted
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.8
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&amp;gt;client aes128-ctr hmac-md5 none
debug1: kex: client-&amp;gt;server aes128-ctr hmac-md5 none
debug1: sending SSH2_MSG_KEXDH_INIT
debug1: expecting SSH2_MSG_KEXDH_REPLY
debug1: Server host key: RSA c4:04:b5:ef:1f:d3:0b:9a:44:13:a3:4e:e8:69:20:f2
debug1: found 1 secure fingerprints in DNS
debug1: matching host key fingerprint found in DNS
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
Connection closed by 127.0.0.1&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;现在就不再提示需要确认服务端公钥了&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Mon, 06 Aug 2012 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2012-08-06:2012/dns.html</guid></item><item><title>Python代码阅读基础</title><link>https://bhuztez.github.io/2012/python-code-reading-101.html</link><description>&lt;p&gt;在阅读Python代码的时候，别忘了Python标准库里几个比较有用的库， &lt;code&gt;pdb&lt;/code&gt; 、 &lt;code&gt;ast&lt;/code&gt; 和 &lt;code&gt;code&lt;/code&gt; 。 &lt;code&gt;pdb&lt;/code&gt; 用来调试， &lt;code&gt;ast&lt;/code&gt; 用来解析Python代码， &lt;code&gt;code&lt;/code&gt; 直接能给你一个 &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop"&gt;REPL&lt;/a&gt; 。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;比如，阅读 &lt;code&gt;nova-api&lt;/code&gt; 的代码，并不关心URL Routing是怎么实现的，想知道的只是URL和相应处理代码的对应关系。把 &lt;code&gt;nova-api&lt;/code&gt; 最后两行代码换成下面这两行。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;code&lt;/span&gt;
&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;interact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;运行：&lt;/p&gt;
&lt;pre class="code pycon literal-block"&gt;
&lt;span class="go"&gt;Python 2.7.3rc2 (default, Apr 22 2012, 22:30:17)
[GCC 4.6.3] on linux2
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
(InteractiveConsole)
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;
&lt;span class="go"&gt;[&amp;lt;nova.service.WSGIService object at 0x7f9cf662ff90&amp;gt;, &amp;lt;nova.service.WSGIService object at 0x2e90850&amp;gt;, &amp;lt;nova.service.WSGIService object at 0x33123d0&amp;gt;, &amp;lt;nova.service.WSGIService object at 0x4d3e390&amp;gt;]
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="go"&gt;['__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_get_manager', 'app', 'host', 'loader', 'manager', 'name', 'port', 'server', 'start', 'stop', 'wait']
&lt;/span&gt;&lt;span class="p"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;servers&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="go"&gt;['ec2', 'osapi_compute', 'osapi_volume', 'metadata']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;
&lt;span class="go"&gt;{(None, ''): &amp;lt;nova.api.openstack.FaultWrapper object at 0x33b7a10&amp;gt;, (None, '/v1.1'): &amp;lt;nova.api.openstack.FaultWrapper object at 0x4d2e150&amp;gt;, (None, '/v2'): &amp;lt;nova.api.openstack.FaultWrapper object at 0x4866990&amp;gt;}
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['__call__', '__cmp__', '__contains__', '__delitem__', '__doc__', '__getitem__', '__init__', '__iter__', '__len__', '__module__', '__repr__', '__setitem__', '_accept_strategy', '_content_type_strategy', '_match', '_munge_path', '_path_strategy', '_set_script_name', 'applications', 'clear', 'domain_url_re', 'get', 'has_key', 'items', 'iteritems', 'iterkeys', 'itervalues', 'keys', 'norm_url_re', 'normalize_url', 'not_found_app', 'not_found_application', 'pop', 'popitem', 'setdefault', 'sort_apps', 'update', 'values']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;
&lt;span class="go"&gt;[((None, '/v1.1'), &amp;lt;nova.api.openstack.FaultWrapper object at 0x4d2e150&amp;gt;), ((None, '/v2'), &amp;lt;nova.api.openstack.FaultWrapper object at 0x4866990&amp;gt;), ((None, ''), &amp;lt;nova.api.openstack.FaultWrapper object at 0x33b7a10&amp;gt;)]
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__delslice__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getslice__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__setslice__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="go"&gt;['__call__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'application', 'factory', 'process_request', 'process_response']
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['__call__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_add_headers', '_build_user_headers', '_cache', '_cache_get', '_cache_put', '_cache_store_invalid', '_get_header', '_get_http_connection', '_get_user_token_from_header', '_header_to_env_var', '_iso8601', '_json_request', '_reject_request', '_remove_auth_headers', '_remove_headers', '_request_admin_token', '_validate_user_token', 'admin_password', 'admin_tenant_name', 'admin_token', 'admin_user', 'app', 'auth_host', 'auth_port', 'auth_uri', 'conf', 'delay_auth_decision', 'get_admin_token', 'http_client_class', 'token_cache_time']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;keystone.middleware.auth_token.AuthProtocol object at 0x4d2e0d0&amp;gt;
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['__call__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_add_headers', '_build_user_headers', '_cache', '_cache_get', '_cache_put', '_cache_store_invalid', '_get_header', '_get_http_connection', '_get_user_token_from_header', '_header_to_env_var', '_iso8601', '_json_request', '_reject_request', '_remove_auth_headers', '_remove_headers', '_request_admin_token', '_validate_user_token', 'admin_password', 'admin_tenant_name', 'admin_token', 'admin_user', 'app', 'auth_host', 'auth_port', 'auth_uri', 'conf', 'delay_auth_decision', 'get_admin_token', 'http_client_class', 'token_cache_time']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;nova.api.auth.NovaKeystoneContext object at 0x4990cd0&amp;gt;
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['__call__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'application', 'factory', 'process_request', 'process_response']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;nova.api.openstack.compute.limits.RateLimitingMiddleware object at 0x4986b90&amp;gt;
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['__call__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_limiter', 'application', 'factory', 'process_request', 'process_response']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;nova.api.openstack.compute.APIRouter object at 0x3508ed0&amp;gt;
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['ExtensionManager', '__call__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_dispatch', '_router', '_setup_ext_routes', '_setup_extensions', '_setup_routes', 'factory', 'map', 'resources']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;nova.api.openstack.ProjectMapper object at 0x4866650&amp;gt;
&lt;/span&gt;&lt;span class="nb"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;['__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_create_gens', '_create_regs', '_created_gens', '_created_regs', '_envdel', '_envget', '_envset', '_master_regexp', '_match', '_regprefix', '_routenames', 'always_scan', 'append_slash', 'collection', 'connect', 'controller_scan', 'create_regs', 'create_regs_lock', 'debug', 'decode_errors', 'directory', 'domain_match', 'encoding', 'environ', 'explicit', 'extend', 'generate', 'hardcode_names', 'match', 'matchlist', 'maxkeys', 'minimization', 'minkeys', 'prefix', 'redirect', 'req_data', 'resource', 'routematch', 'sub_domains', 'sub_domains_ignore', 'submapper', 'urlcache']
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matchlist&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="go"&gt;'os-floating-ips'
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conditions&lt;/span&gt;
&lt;span class="go"&gt;{'method': ['GET']}
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_kargs&lt;/span&gt;
&lt;span class="go"&gt;{'requirements': {'id': '[^\\/]+(?&amp;lt;!\\\\)'}, 'controller': &amp;lt;nova.api.openstack.wsgi.Resource object at 0x5093b50&amp;gt;, 'action': 'show'}
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_kargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'controller'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;nova.api.openstack.wsgi.Resource object at 0x5093b50&amp;gt;
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_kargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'controller'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;class 'nova.api.openstack.wsgi.Resource'&amp;gt;
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_kargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'controller'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;nova.api.openstack.compute.contrib.floating_ips.FloatingIPController object at 0x4d07d50&amp;gt;
&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_kargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'controller'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__doc__&lt;/span&gt;
&lt;span class="go"&gt;'Return data about the given floating ip.'&lt;/span&gt;
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Wed, 06 Jun 2012 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2012-06-06:2012/python-code-reading-101.html</guid></item><item><title>老笑话了</title><link>https://bhuztez.github.io/2012/there-is-an-old-joke.html</link><description>&lt;p&gt;去年爆出了hash collision DoS的问题 &lt;a class="footnote-reference" href="#hash-collision-dos" id="id2"&gt;[1]&lt;/a&gt; ，其实这是一个老笑话了 &lt;a class="footnote-reference" href="#an-old-joke" id="id3"&gt;[2]&lt;/a&gt; ：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;老妈平时买菜总爱拎着个弹簧秤。然而昨天我在菜市场里看到的一幕，可比老妈的弹簧秤高明多了。&lt;/p&gt;
&lt;p&gt;一老大爷走到卖西红柿的摊前问：“多少钱一斤？”摊主回答：“两块五。”大爷挑了三个西红柿放到秤盘里。摊主说：“一斤半，三块七。”大爷说：“我就做个汤，不用那么多。”说着就去掉了个儿最大的那个西红柿。摊主迅速地又瞧一眼说：“一斤二两，三块钱。”&lt;/p&gt;
&lt;p&gt;我在一旁看着，心想，怎么这西红柿越大越不压称，难道那个大西红柿是空心的。实在看不过去了，就提醒大爷：“他称的不对。”没想到大爷对我摆了摆手，毫不在意，伸手就往外掏钱。&lt;/p&gt;
&lt;p&gt;那摊主见大爷如此爽快，索性拿眼睛瞥着我，一副得意洋洋的样子。没想到的是，大爷并没有拿摊主已经装在塑料袋里的两个西红柿，而是拿起刚才去掉的那大的，放下七毛钱，扭头就走……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table class="docutils footnote" frame="void" id="hash-collision-dos" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://www.ocert.org/advisories/ocert-2011-003.html"&gt;multiple implementations denial-of-service via hash algorithm collision&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="an-old-joke" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;这是我能找到的最早的有明确时间的转载了， &lt;a class="reference external" href="https://blog.delphij.net/2006/04/zz-56.html"&gt;https://blog.delphij.net/2006/04/zz-56.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Fri, 13 Apr 2012 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2012-04-13:2012/there-is-an-old-joke.html</guid></item><item><title>用Django ORM动态生成SQL</title><link>https://bhuztez.github.io/2010/django-query-to-sql.html</link><description>&lt;p&gt;去年的时候，就想自己仿个 &lt;a class="reference external" href="https://github.com/"&gt;GitHub&lt;/a&gt; 玩玩。可是， &lt;a class="reference external" href="http://git-scm.com/"&gt;Git&lt;/a&gt; 并不像 &lt;a class="reference external" href="http://mercurial.selenic.com/"&gt;Mercurial&lt;/a&gt; 那样原生支持HTTP协议，得用SSH来限制用户访问。 &lt;a class="reference external" href="https://github.com/"&gt;GitHub&lt;/a&gt; 和 &lt;a class="reference external" href="http://gitorious.org/"&gt;Gitorious&lt;/a&gt; 也都是那么做的。 而 &lt;a class="reference external" href="http://eagain.net/gitweb/?p=gitosis.git"&gt;Gitosis&lt;/a&gt; 和 &lt;a class="reference external" href="https://github.com/sitaramc/gitolite"&gt;Gitolite&lt;/a&gt; 用起来都不是很方便， 后来看到 &lt;a class="reference external" href="http://twistedmatrix.com/"&gt;Twisted&lt;/a&gt; 也实现了SSH协议，想在上面改改就拿来用，毕竟不能直接拿来用，也一直没去看，就这样不了了之了。直到某日，看到 &lt;a class="reference external" href="http://deadpuck.net/blag/serving-git/"&gt;Serving Git&lt;/a&gt; 。这样SSH的问题就解决了。顺着那篇文章的思路下来，就想用 &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; 弄个Web界面让用户来管理密钥，很快就弄好了，没有遇到任何困难。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;不过，既然是用 &lt;a class="reference external" href="http://twistedmatrix.com/"&gt;Twisted&lt;/a&gt; ，用 &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; 来操作数据库总觉得有点怪怪的。尽管自己测试的时候，下面这样的代码运行起来也没什么问题。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PublicKeyChecker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SSHPublicKeyDatabase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;checkKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;keystring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OPENSSH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;PublicKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;user__username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;keystring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keystring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;因为 &lt;tt class="docutils literal"&gt;PublicKeyChecker&lt;/tt&gt; 继承自 &lt;tt class="docutils literal"&gt;SSHPublicKeyDatabase&lt;/tt&gt; ， 看了下 &lt;tt class="docutils literal"&gt;twisted.conch.checkers&lt;/tt&gt; ，看到了一个 &lt;tt class="docutils literal"&gt;maybeDeferred&lt;/tt&gt;  &lt;a class="footnote-reference" href="#deferred" id="id1"&gt;[1]&lt;/a&gt; 。下面就是相关部分的代码：&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SSHPublicKeyDatabase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;requestAvatarId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maybeDeferred&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_cbRequestAvatarId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addErrback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_ebRequestAvatarId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="http://twistedmatrix.com/"&gt;Twisted&lt;/a&gt; 里需要用 &lt;tt class="docutils literal"&gt;twisted.enterprise.adbapi&lt;/tt&gt; 来操作数据库，而这玩意儿需要直接传入SQL语句 &lt;a class="footnote-reference" href="#adbapi" id="id2"&gt;[2]&lt;/a&gt; 。在 &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; 里是用ORM解决问题的，还是希望在这里尽量不要硬编码SQL语句了。看了看 &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; 的源代码，找到了这么个办法，可以得到对应 &lt;tt class="docutils literal"&gt;queryset&lt;/tt&gt; 的SQL语句。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;qs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PublicKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;user__username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;keystring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keystring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;compiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_compiler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;using&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;compiler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_sql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;但是， &lt;tt class="docutils literal"&gt;sqlite3&lt;/tt&gt; 会对这样生成的SQL语句报错。需要用 &lt;tt class="docutils literal"&gt;cursor.convert_query(sql)&lt;/tt&gt; 把里面的 &lt;tt class="docutils literal"&gt;%s&lt;/tt&gt; 之类的转换成 &amp;quot;&lt;tt class="docutils literal"&gt;?&lt;/tt&gt;&amp;quot;（问号）。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;compiler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;终于可以返回查询了。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dbpool&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;我们只需要知道有没有，不需要取回这么多数据，因为 &lt;tt class="docutils literal"&gt;[:1]&lt;/tt&gt; 会直接取出结果，所以用 &lt;tt class="docutils literal"&gt;qs.query.set_limits&lt;/tt&gt; 。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;qs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PublicKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;user__username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;keystring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keystring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_limits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;把前面的连起来&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PublicKeyChecker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SSHPublicKeyDatabase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;checkKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;keystring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OPENSSH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;qs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PublicKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;user__username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;keystring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keystring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_limits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;compiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_compiler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;using&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;compiler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_sql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;compiler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dbpool&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;table class="docutils footnote" frame="void" id="deferred" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;关于 &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt; 可以参考 &lt;a class="reference external" href="http://twistedmatrix.com/documents/current/core/howto/defer.html"&gt;Deferred Reference&lt;/a&gt; （2010年8月22日查阅）&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="adbapi" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;参考 &lt;a class="reference external" href="http://twistedmatrix.com/documents/current/core/howto/rdbms.html"&gt;twisted.enterprise.adbapi: Twisted RDBMS support&lt;/a&gt; （2010年8月22日查阅）&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Fri, 17 Sep 2010 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2010-09-17:2010/django-query-to-sql.html</guid></item><item><title>ArchLinux从AUR安装octave-forge遇到gcc-fortran conflicts with gcc-libs</title><link>https://bhuztez.github.io/2010/install-octave-forge-from-aur.html</link><description>&lt;p&gt;从&lt;a class="reference external" href="http://aur.archlinux.org/packages.php?ID=20824"&gt;这里&lt;/a&gt;看，应该2009年8月31日才加上的。其实 &lt;code&gt;gcc-fortran&lt;/code&gt; 是不一定要的，把 &lt;code&gt;makedepends&lt;/code&gt; 那行去掉就好了，囧&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sat, 02 Jan 2010 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2010-01-02:2010/install-octave-forge-from-aur.html</guid></item><item><title>编译SystemC 2.2.0的问题</title><link>https://bhuztez.github.io/2009/compiling-systemc.html</link><description>&lt;p&gt;居然连编译都有困难，SystemC的表现令人失望。看了&lt;a class="reference external" href="http://forums.fedoraforum.org/showthread.php?t=199153"&gt;这个帖子&lt;/a&gt;的#7之后，才发现居然还是个低级错误，要修改 &lt;code&gt;systemc-2.2.0/src/sysc/utils/sc_utils_ids.cpp&lt;/code&gt; 这个文件，更加C++一点的写法是像下面这样的：&lt;/p&gt;
&lt;!-- more --&gt;
&lt;pre class="code c++ literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;另外，SCV在我这里就连configure都不行，后来一看，竟然从2006年到现在还没更新过，怪不得里面用的automake的版本号都小得有点离奇。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Sun, 12 Apr 2009 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2009-04-12:2009/compiling-systemc.html</guid></item><item><title>pppd插件编写</title><link>https://bhuztez.github.io/2008/pppd-plugin.html</link><description>&lt;p&gt;先 &lt;code&gt;yum install ppp-devel&lt;/code&gt; ，接着就可以在代码中使用 &lt;code&gt;#include &amp;lt;pppd/pppd.h&amp;gt;&lt;/code&gt; 和 &lt;code&gt;char pppd_version[] = VERSION;&lt;/code&gt; 以确保plugin能被pppd使用。&lt;/p&gt;
&lt;p&gt;pap_passwd_hook被调用的过程还是很令人困惑的。首先，第一次被调用的时候，参数user是有分配空间的，为了让pap_passwd_hook被调用，是不能传入password的，导致第一次被调用的时候，参数passwd没有被分配空间，是NULL。若第一次修改了用户名，第二次调用的时候会传入修改过的用户名，而第二次passwd被分配了空间，此时可以strcpy。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;所以还得这么干：&lt;/p&gt;
&lt;pre class="code c literal-block"&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;pwd&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAXSECRETLEN&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;is_name_modified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;option_t&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pwd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;&amp;quot;pwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;OPT_STATIC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAXSECRETLEN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;pap_passwd_hooker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Note: Do not modify the username twice in a session.
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;is_name_modified&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;modify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;is_name_modified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Note: passwd == NULL the first time this function is called
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pwd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;plugin_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;add_options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;pap_passwd_hook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pap_passwd_hooker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">bhuztez</dc:creator><pubDate>Thu, 06 Nov 2008 00:00:00 +0800</pubDate><guid>tag:bhuztez.github.io,2008-11-06:2008/pppd-plugin.html</guid></item></channel></rss>